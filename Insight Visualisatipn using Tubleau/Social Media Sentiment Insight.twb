<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='3) Sentiment dataset' inline='true' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3) Sentiment dataset' name='textscan.1ehrb0v1uznuyi19gp2jc0vqx2g5'>
            <connection class='textscan' directory='C:/Users/TIBU/Downloads/CodvedaProject' filename='3) Sentiment dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ehrb0v1uznuyi19gp2jc0vqx2g5' name='3) Sentiment dataset.csv' table='[3) Sentiment dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_ZA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='string' name='Text' ordinal='2' />
            <column datatype='string' name='Sentiment' ordinal='3' />
            <column datatype='datetime' name='Timestamp' ordinal='4' />
            <column datatype='string' name='User' ordinal='5' />
            <column datatype='string' name='Platform' ordinal='6' />
            <column datatype='string' name='Hashtags' ordinal='7' />
            <column datatype='real' name='Retweets' ordinal='8' />
            <column datatype='real' name='Likes' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Year' ordinal='11' />
            <column datatype='integer' name='Month' ordinal='12' />
            <column datatype='integer' name='Day' ordinal='13' />
            <column datatype='integer' name='Hour' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_ZA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Text]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Text</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sentiment]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Timestamp]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Timestamp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>User</remote-name>
            <remote-type>129</remote-type>
            <local-name>[User]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>User</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Platform]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hashtags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hashtags]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Hashtags</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retweets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Retweets]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Retweets</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Likes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Likes]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Likes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[3) Sentiment dataset.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Records' datatype='integer' name='[Calculation_735494171484561408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Text])' />
      </column>
      <column caption='Avg Tweets' datatype='real' name='[Calculation_735494171494453249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Retweets])' />
      </column>
      <column caption='AVG Likes' datatype='real' name='[Calculation_735494171494703106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Likes])' />
      </column>
      <column aggregation='CountD' datatype='string' name='[Country]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='&quot;Australia&quot;' value='&quot;Bojanala&quot;' />
          <semantic-value key='&quot;Austria&quot;' value='&quot;Dr Kenneth Kaunda&quot;' />
          <semantic-value key='&quot;Belgium&quot;' value='&quot;Amajuba&quot;' />
          <semantic-value key='&quot;Brazil&quot;' value='&quot;John Taolo Gaetsewe&quot;' />
          <semantic-value key='&quot;Cambodia&quot;' value='&quot;City of Tshwane&quot;' />
          <semantic-value key='&quot;Canada&quot;' value='&quot;Frances Baard&quot;' />
          <semantic-value key='&quot;South Africa&quot;' value='&quot;City of Cape Town&quot;' />
          <semantic-value key='&quot;Sweden&quot;' value='&quot;Ngaka Modiri Molema&quot;' />
          <semantic-value key='&quot;Switzerland&quot;' value='&quot;Xhariep&quot;' />
          <semantic-value key='&quot;Thailand&quot;' value='&quot;West Coast&quot;' />
          <semantic-value key='&quot;UK&quot;' value='&quot;Vhembe&quot;' />
          <semantic-value key='&quot;USA&quot;' value='&quot;Eden&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='3) Sentiment dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]' role='measure' type='quantitative' />
      <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/TIBU/AppData/Local/Temp/TableauTemp/#TableauTemp_1xnqyug0bsgcp418jtege0yyv6i0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2025 07:21:25 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>732</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unnamed: 0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0</remote-alias>
              <ordinal>1</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>732</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Text</remote-alias>
              <ordinal>2</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>707</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sentiment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sentiment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sentiment</remote-alias>
              <ordinal>3</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Timestamp</remote-alias>
              <ordinal>4</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>User</remote-name>
              <remote-type>129</remote-type>
              <local-name>[User]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>User</remote-alias>
              <ordinal>5</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Platform</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Platform]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Platform</remote-alias>
              <ordinal>6</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hashtags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Hashtags]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hashtags</remote-alias>
              <ordinal>7</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>692</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retweets</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retweets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retweets</remote-alias>
              <ordinal>8</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Likes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Likes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Likes</remote-alias>
              <ordinal>9</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>10</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>11</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>12</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day</remote-alias>
              <ordinal>13</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>14</ordinal>
              <family>3) Sentiment dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <object-id>[3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sentiment:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ambivalence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Celebration&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dazzle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grandeur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inspiration&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mesmerizing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pressure&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wonderment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acceptance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bitter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Contentment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fearful&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hope&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kindness&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Optimism&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Touched&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adrenaline&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boredom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Culinary Adventure&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EmotionalStorm&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Friendship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Imagination&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Playful&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sadness&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whimsy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anxiety&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorful&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Determination&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Envious&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Happiness&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isolation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Motivation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reflection&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Success&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amusement&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Celestial Wonder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desolation&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Engagement&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grateful&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inspired&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mindfulness&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pride&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solitude&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yearning&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breakthrough&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CulinaryOdyssey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Empathetic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frustrated&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Immersion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marvel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PlayfulJoy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Satisfaction&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Whispers of the Past&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Connection&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DreamChaser&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Exploration&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heartwarming&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JoyfulReunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Obstacle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Resilience&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thrill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accomplishment&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bitterness&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coziness&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elegance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FestiveJoy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hopeful&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Loneliness&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Overjoyed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ruins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tranquility&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ArtisticBurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Confident&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Disgust&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Excitement&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heartache&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nostalgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Renewed Effort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sympathy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Affection&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Calmness&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curiosity&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Empowerment&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frustration&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indifference&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melancholy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serenity&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winter Magic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appreciation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Compassion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Devastated&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Envisioning History&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Happy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jealous&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nature&apos;s Beauty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Regret&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suffering&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apprehensive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Compassionate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Disappointed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Envy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harmony&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jealousy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rejuvenation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Surprise&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Awe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Confusion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dismissive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Exhaustion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heartbreak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joy in Baking&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Numbness&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Resentment&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tenderness&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Betrayal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Contemplation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecstasy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fear&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Helplessness&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kind&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ocean&apos;s Freedom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reverence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thrilling Journey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Challenge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Despair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Enjoyment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gratitude&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Intimidation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miscalculation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Proud&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sorrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amazement&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Captivation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darkness&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Enchantment&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulfillment&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;InnerJourney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melodic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Positivity&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shame&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wonder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Admiration&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bittersweet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Creative Inspiration&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Embarrassed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Free-spirited&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hypnotic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Loss&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overwhelmed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Runway Creativity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Triumph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arousal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Confidence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Disappointment&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Euphoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Journey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Relief&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suspense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anticipation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charm&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desperation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Enthusiasm&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grief&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Intrigue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mischievous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Radiance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adoration&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blessed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Creativity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emotion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Freedom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iconic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LostLove&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pensive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vibrancy&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;South Africa&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='3) Sentiment dataset.csv' id='3) Sentiment dataset.csv_93C00D189AF14172952519BDBFF9C430'>
            <properties context=''>
              <relation connection='textscan.1ehrb0v1uznuyi19gp2jc0vqx2g5' name='3) Sentiment dataset.csv' table='[3) Sentiment dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_ZA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='string' name='Text' ordinal='2' />
                  <column datatype='string' name='Sentiment' ordinal='3' />
                  <column datatype='datetime' name='Timestamp' ordinal='4' />
                  <column datatype='string' name='User' ordinal='5' />
                  <column datatype='string' name='Platform' ordinal='6' />
                  <column datatype='string' name='Hashtags' ordinal='7' />
                  <column datatype='real' name='Retweets' ordinal='8' />
                  <column datatype='real' name='Likes' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Year' ordinal='11' />
                  <column datatype='integer' name='Month' ordinal='12' />
                  <column datatype='integer' name='Day' ordinal='13' />
                  <column datatype='integer' name='Hour' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Overall Sentiment Distribution of Social Media Posts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3) Sentiment dataset' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' />
          </datasources>
          <datasource-dependencies datasource='federated.1at93zo0v9jbaq15ymf0c1jcstsd'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_735494171484561408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Text])' />
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Text]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_735494171484561408]' derivation='User' name='[usr:Calculation_735494171484561408:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]</rows>
        <cols>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</cols>
      </table>
      <simple-id uuid='{754A30E2-FE6A-4A16-A10E-A9FC7AE1C3F9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Trends in Sentiment Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3) Sentiment dataset' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' />
          </datasources>
          <datasource-dependencies datasource='federated.1at93zo0v9jbaq15ymf0c1jcstsd'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_735494171484561408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Text])' />
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Text]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_735494171484561408]' derivation='User' name='[usr:Calculation_735494171484561408:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Acceptance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Accomplishment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Admiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adoration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adrenaline&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Affection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amazement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ambivalence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amusement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anger&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anticipation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anxiety&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Appreciation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Apprehensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Arousal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;ArtisticBurst&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Awe&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Betrayal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitter&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitterness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bittersweet&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Blessed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Boredom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Breakthrough&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Calmness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Captivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celebration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celestial Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Challenge&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Charm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Colorful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassionate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confidence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confident&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confusion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Connection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contemplation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Coziness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creative Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Culinary Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;CulinaryOdyssey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Curiosity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Darkness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dazzle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Despair&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desperation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Determination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Devastated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disgust&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dismissive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;DreamChaser&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ecstasy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elegance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Embarrassed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Emotion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;EmotionalStorm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empathetic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empowerment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enchantment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Energy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Engagement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enjoyment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enthusiasm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envious&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envisioning History&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Euphoria&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Excitement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exhaustion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exploration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fear&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fearful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;FestiveJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Free-spirited&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Friendship&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustrated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fulfillment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grandeur&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grateful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Gratitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happiness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Harmony&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartache&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartbreak&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartwarming&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Helplessness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hope&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hopeful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hypnotic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Iconic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Imagination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Immersion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Indifference&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;InnerJourney&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspired&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intimidation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intrigue&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Isolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealousy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy in Baking&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;JoyfulReunion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kind&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kindness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loneliness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loss&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;LostLove&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Love&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Marvel&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melancholy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melodic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mesmerizing&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mindfulness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Miscalculation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mischievous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Motivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nature&apos;s Beauty&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Neutral&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nostalgia&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Numbness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Obstacle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ocean&apos;s Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Optimism&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overjoyed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overwhelmed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Playful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;PlayfulJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positivity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pressure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pride&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Proud&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Radiance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reflection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Regret&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Rejuvenation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Renewed Effort&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resilience&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reverence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Romance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ruins&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Runway Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sadness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Satisfaction&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Serenity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Shame&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solace&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sorrow&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Spark&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Success&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suffering&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Surprise&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suspense&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sympathy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tenderness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrill&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrilling Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Touched&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tranquility&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Triumph&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Vibrancy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whimsy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whispers of the Past&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Winter Magic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonderment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Yearning&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Zest&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]</rows>
        <cols>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{044B9D7E-D3BE-457B-B5E1-C5065A9950D3}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Sentiment Comparison Across Social Media Platforms</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3) Sentiment dataset' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' />
          </datasources>
          <datasource-dependencies datasource='federated.1at93zo0v9jbaq15ymf0c1jcstsd'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_735494171484561408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Text])' />
            </column>
            <column datatype='string' name='[Platform]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Text]' role='dimension' type='nominal' />
            <column-instance column='[Platform]' derivation='None' name='[none:Platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_735494171484561408]' derivation='User' name='[usr:Calculation_735494171484561408:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Acceptance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Accomplishment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Admiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adoration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adrenaline&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Affection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amazement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ambivalence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amusement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anger&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anticipation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anxiety&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Appreciation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Apprehensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Arousal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;ArtisticBurst&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Awe&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Betrayal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitter&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitterness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bittersweet&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Blessed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Boredom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Breakthrough&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Calmness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Captivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celebration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celestial Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Challenge&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Charm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Colorful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassionate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confidence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confident&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confusion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Connection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contemplation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Coziness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creative Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Culinary Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;CulinaryOdyssey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Curiosity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Darkness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dazzle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Despair&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desperation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Determination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Devastated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disgust&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dismissive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;DreamChaser&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ecstasy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elegance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Embarrassed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Emotion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;EmotionalStorm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empathetic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empowerment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enchantment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Energy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Engagement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enjoyment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enthusiasm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envious&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envisioning History&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Euphoria&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Excitement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exhaustion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exploration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fear&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fearful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;FestiveJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Free-spirited&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Friendship&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustrated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fulfillment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grandeur&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grateful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Gratitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happiness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Harmony&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartache&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartbreak&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartwarming&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Helplessness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hope&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hopeful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hypnotic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Iconic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Imagination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Immersion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Indifference&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;InnerJourney&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspired&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intimidation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intrigue&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Isolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealousy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy in Baking&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;JoyfulReunion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kind&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kindness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loneliness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loss&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;LostLove&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Love&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Marvel&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melancholy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melodic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mesmerizing&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mindfulness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Miscalculation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mischievous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Motivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nature&apos;s Beauty&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Neutral&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nostalgia&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Numbness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Obstacle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ocean&apos;s Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Optimism&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overjoyed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overwhelmed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Playful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;PlayfulJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positivity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pressure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pride&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Proud&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Radiance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reflection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Regret&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Rejuvenation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Renewed Effort&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resilience&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reverence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Romance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ruins&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Runway Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sadness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Satisfaction&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Serenity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Shame&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solace&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sorrow&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Spark&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Success&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suffering&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Surprise&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suspense&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sympathy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tenderness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrill&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrilling Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Touched&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tranquility&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Triumph&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Vibrancy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whimsy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whispers of the Past&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Winter Magic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonderment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Yearning&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Zest&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]</rows>
        <cols>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Platform:nk]</cols>
      </table>
      <simple-id uuid='{3D02D982-50F9-4CAF-85AD-73BAD96BDA7F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Global Sentiment Distribution by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3) Sentiment dataset' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1at93zo0v9jbaq15ymf0c1jcstsd'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_735494171484561408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Text])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Country]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Australia&quot;' value='&quot;Bojanala&quot;' />
                <semantic-value key='&quot;Austria&quot;' value='&quot;Dr Kenneth Kaunda&quot;' />
                <semantic-value key='&quot;Belgium&quot;' value='&quot;Amajuba&quot;' />
                <semantic-value key='&quot;Brazil&quot;' value='&quot;John Taolo Gaetsewe&quot;' />
                <semantic-value key='&quot;Cambodia&quot;' value='&quot;City of Tshwane&quot;' />
                <semantic-value key='&quot;Canada&quot;' value='&quot;Frances Baard&quot;' />
                <semantic-value key='&quot;South Africa&quot;' value='&quot;City of Cape Town&quot;' />
                <semantic-value key='&quot;Sweden&quot;' value='&quot;Ngaka Modiri Molema&quot;' />
                <semantic-value key='&quot;Switzerland&quot;' value='&quot;Xhariep&quot;' />
                <semantic-value key='&quot;Thailand&quot;' value='&quot;West Coast&quot;' />
                <semantic-value key='&quot;UK&quot;' value='&quot;Vhembe&quot;' />
                <semantic-value key='&quot;USA&quot;' value='&quot;Eden&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Text]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_735494171484561408]' derivation='User' name='[usr:Calculation_735494171484561408:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Acceptance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Accomplishment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Admiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adoration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adrenaline&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Affection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amazement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ambivalence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Amusement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anger&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anticipation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Anxiety&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Appreciation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Apprehensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Arousal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;ArtisticBurst&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Awe&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Betrayal&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitter&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bitterness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Bittersweet&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Blessed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Boredom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Breakthrough&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Calmness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Captivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celebration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Celestial Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Challenge&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Charm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Colorful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Compassionate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confidence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confident&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Confusion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Connection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contemplation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Contentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Coziness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creative Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Culinary Adventure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;CulinaryOdyssey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Curiosity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Darkness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dazzle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Despair&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Desperation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Determination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Devastated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disappointment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Disgust&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Dismissive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;DreamChaser&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ecstasy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Elegance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Embarrassed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Emotion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;EmotionalStorm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empathetic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Empowerment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enchantment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Energy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Engagement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enjoyment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Enthusiasm&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envious&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envisioning History&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Envy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Euphoria&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Excitement&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exhaustion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Exploration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fear&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fearful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;FestiveJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Free-spirited&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Friendship&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustrated&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Frustration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Fulfillment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grandeur&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grateful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Gratitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Grief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happiness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Happy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Harmony&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hate&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartache&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartbreak&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Heartwarming&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Helplessness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hope&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hopeful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Hypnotic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Iconic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Imagination&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Immersion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Indifference&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;InnerJourney&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspiration&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Inspired&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intimidation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Intrigue&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Isolation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Jealousy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Joy in Baking&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;JoyfulReunion&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kind&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Kindness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loneliness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Loss&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;LostLove&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Love&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Marvel&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melancholy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Melodic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mesmerizing&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mindfulness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Miscalculation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Mischievous&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Motivation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nature&apos;s Beauty&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Neutral&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Nostalgia&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Numbness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Obstacle&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ocean&apos;s Freedom&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Optimism&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overjoyed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Overwhelmed&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pensive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Playful&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;PlayfulJoy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positive&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Positivity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pressure&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Pride&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Proud&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Radiance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reflection&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Regret&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Rejuvenation&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Renewed Effort&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resentment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Resilience&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Reverence&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Romance&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Ruins&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Runway Creativity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sad&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sadness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Satisfaction&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Serenity&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Shame&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solace&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Solitude&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sorrow&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Spark&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Success&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suffering&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Surprise&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Suspense&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Sympathy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tenderness&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrill&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Thrilling Journey&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Touched&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Tranquility&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Triumph&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Vibrancy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whimsy&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Whispers of the Past&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Winter Magic&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonder&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Wonderment&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Yearning&quot;' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;Zest&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</column>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Latitude (generated)]</column>
            <column>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Longitude (generated)]' field-type='quantitative' max='10664344.307923339' min='-3765987.5625656387' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Latitude (generated)]' field-type='quantitative' max='2663622.1136224549' min='-5190861.995587443' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
              <size column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]' />
              <lod column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Latitude (generated)]</rows>
        <cols>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{357543B5-92D3-492A-85D1-C04090E0F311}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Average Engagement (Likes &amp; Retweets) by Sentiment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='3) Sentiment dataset' name='federated.1at93zo0v9jbaq15ymf0c1jcstsd' />
          </datasources>
          <datasource-dependencies datasource='federated.1at93zo0v9jbaq15ymf0c1jcstsd'>
            <column caption='Avg Tweets' datatype='real' name='[Calculation_735494171494453249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Retweets])' />
            </column>
            <column caption='AVG Likes' datatype='real' name='[Calculation_735494171494703106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Likes])' />
            </column>
            <column datatype='real' name='[Likes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Retweets]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_735494171494453249]' derivation='User' name='[usr:Calculation_735494171494453249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_735494171494703106]' derivation='User' name='[usr:Calculation_735494171494703106:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171494703106:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171494453249:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171494703106:qk] + [federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171494453249:qk])</rows>
        <cols>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</cols>
      </table>
      <simple-id uuid='{6DDB5662-AB2A-4BC7-8D8F-AD350BB52304}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Social Media Sentiment Insights Dashboard'>
      <style />
      <size maxheight='1052' maxwidth='1707' minheight='1052' minwidth='1707' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98480' id='7' param='horz' type-v2='layout-flow' w='99062' x='469' y='760'>
            <zone h='98480' id='5' type-v2='layout-basic' w='89689' x='469' y='760'>
              <zone h='43001' id='3' name='Sheet 1' w='44845' x='469' y='56239'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32330' id='10' name='Sheet 2' w='50761' x='469' y='760'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55479' id='11' name='Sheet 3' w='38928' x='51230' y='760'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23149' id='14' name='Sheet 5' w='50761' x='469' y='33090'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43001' id='15' name='Sheet 4' w='44844' x='45314' y='56239'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98480' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9373' x='90158' y='760'>
              <zone h='80610' id='8' name='Sheet 1' pane-specification-id='2' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type-v2='color' w='9373' x='90158' y='760'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5893' id='9' name='Sheet 1' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type-v2='highlighter' w='9373' x='90158' y='81370'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11977' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]' type-v2='size' w='9373' x='90158' y='87263'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98480' id='21' param='vert' type-v2='layout-flow' w='99062' x='469' y='760'>
                <zone fixed-size='280' h='32330' id='10' is-fixed='true' name='Sheet 2' w='50761' x='469' y='760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55479' id='11' is-fixed='true' name='Sheet 3' w='38928' x='51230' y='760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='236' h='23149' id='14' is-fixed='true' name='Sheet 5' w='50761' x='469' y='33090'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5893' id='9' name='Sheet 1' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type-v2='highlighter' w='9373' x='90158' y='81370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43001' id='3' is-fixed='true' name='Sheet 1' w='44845' x='469' y='56239'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='80610' id='8' name='Sheet 1' pane-specification-id='2' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type-v2='color' w='9373' x='90158' y='760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43001' id='15' is-fixed='true' name='Sheet 4' w='44844' x='45314' y='56239'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11977' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]' type-v2='size' w='9373' x='90158' y='87263'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F705C78F-8115-4462-B5F8-D945A363A5B0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type='highlighter' />
            <card pane-specification-id='2' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[:Measure Names]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Month:qk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Platform:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Text:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:User:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7687CBC-35D9-4D28-8423-E3B269D8FF5C}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Platform:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Year:qk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[yr:Timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AF946CA-0E1D-42FB-9A44-D7A35096C9AC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Platform:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80D10414-1FB0-4632-B9C3-1B7FCC9B76E5}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[usr:Calculation_735494171484561408:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Text:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{380C6C53-7BDD-4952-BB41-DA5455010ACD}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4198429D-3508-474E-87E0-F53CA6D25640}' />
    </window>
    <window class='dashboard' maximized='true' name='Social Media Sentiment Insights Dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1at93zo0v9jbaq15ymf0c1jcstsd].[none:Sentiment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7F5A5BBB-E026-4D9A-8BBA-0ECCDA7E8390}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXRU14Hn8e9bqkqlKq1oB0kgJBYhNrEKDIgdLxhjx46dpN3pLdN9Zvr0
      dJ9J5sxMJz2dmZ6cXk5Pd5KOM+3uTjuLndiOTWwDNhgwCBD7IkAIIQmhBe1SlVR7vWX+kAzY
      LlySkUoI3c85+oO6VU9X9vvVvfe9e++TTNM0EYRJSgUwTJOQpo93XQQh5lSAkKZzy+0d77oI
      QszJ412Bu6nSeNdAmGweqABYlQeqOsIkoI53BQAUCSRAFi2AEGOj8pVr6CG8/f0EAiHuXFMy
      CXjd9Pa6Me660GRoQXq7ugiG7wy6ZUlClsTZL8TefbcAoe7rvPn2IRKSE/C5+shdspmyxYV0
      1p7iYEUVcVYTS+Z8Ht1ahu7pZN9bb6PbnHi9Bpu+9CwZiXGEjcGAqKIJEGLsvgOgJExj54tf
      x6oqBDtreX3/RZbPm8rpytMsffRrFGRa2fOTl7jRsQjjegXytOVsW7eAGyfe5cTpK2zfuARx
      2gvj5b67QIrNjhT20dV6g3NnLzNzzjwM3YXX6yArKxlFjSc/L4v2thbam9zkFeahKgrZRUX4
      mloIjcZfIQhf0KgMgrtv1nC+6hreoMm8WU5MU8MwLchD8VIVFU3TMDVQ1cEXJUVF0jTEbWhh
      PI3KIHjavJVsf/5FnnpyHWcPHCKEA9XSj983ONB1uftISEjGmSTh6hu84Rbs68VMSsQyGhUQ
      hC/ovluAW1fP0OqRyMnKoO9mNYbNTpwtkbxsByePHmdOjsK1NpmdT2ShycXsPXKI9LgVVFec
      o2D5DpTR+CsE4QuSTNM0A2HtC0+FCA50cbWqmr7+AeISpjB74WJSE+LQgx6qz52ix6Mzu7SM
      7ClOMA3a6qqoud5C+oxi5s4pQLlrBByvyvg0Y5T+NEGI7r4DMJpEAIRYE3MPhElNBECY1EQA
      hElNBECY1EQAhElNBECY1EQAhElNBECY1EQAhElNBECY1EQAhElNBECY1EQAhEltFFaEmbQ3
      VNN48xaGaqdofilpyfF4Ohupb2wHQJIVCuYvI8Gq0XT1Aldrm8icOZ+SeUWoIoLCOLr/06+v
      nsOnrpGUlU+yMsC7736AYRg0VZ3gRns/qsWColqQgO66sxw5cY25pYtpPbuP8zUt9/8XCMJ9
      uP8WIKmAZ58vRMbE12lysuY8pqnR2+dn+oK5FOZnYLNZkSSdq9XVzCrbSl5eDglrl/DBmauU
      Fk8Tq8KEcXP/AZBlJEOnrb6KY0dOsWj14yiAZFWoO3WQ+pM6zqxC1m9YzoDLJCfZDoA1OQXJ
      1UIYcKoyEmJfICH2RmUMUHfyfc7WDVD26JfIy05FkmDV9q9iGiZBn5vDb/+cqzdnoVpNwqHB
      hfJmKIxhtSAD/qFVYPFiQCDE2H2fceG+eirOd7D1mWfIz5mCJEkYuk5PdzeyohKfkIhVljBN
      laxpyTTVN2OYJu3113FOmyZ2hRDG1X23AK62Vvyedt78538YfCEuhxd+9xmuV+5md6sPxQzj
      mLqARwqmIGeXU/frX/HGT88S1OJ47LkSsSucMK7GcFG8ia5pmEgoisrHe9+apo53wIfd6UT5
      VJ9fLIoXYm0Mt0eXUNTPdnAkScGZmDB2v1YQRkCMOoVJTQRAmNREAIRJTQRAmNSiDoK93Tep
      69SZm5fI0Q/3E4yfzqbNZVjE9UvhIRA1AOf3vsoV22r0uip27WvAob2DNXMGGxdmxaJ+gjCm
      onaBBga82FSNMycusfbLf8C6xQW03+qMRd0EYcxFDcDshYuo/NUPON/jZMnsNOrqW5g2fWos
      6iYIYy7qnWDT0GhvvglxKWSmOWhtbCV9egFxYzCHWdwJFmLtnmOApgsH2Xv4/GcLJJnVT/0O
      JXnJY1kvQYiJe3aBrPYE0tIzMfpuUnfLQ1p6JmnpqVw/fwFdEktYhIfDPVuArNnLeGb2Mg68
      fJ2QtYynv7IFydRxVR+mqbWXhbliPo8w8UW9DJo/azav/vjf+X5XFarWz/nqPr7ynC0WdROE
      MRd1EBwODHDp+EHOX6lHl6zMWVpO2fJ5WMZg+aIYBAuxFrUFOLPrx/y8wsN3//47pFplJEnc
      AhYeHlHvAxSveZwZ8e384pW3aGio50Z9Hf2+cCzqJghjLmoLUHfyEPXt/dD+Flcr3gJJ4cvf
      +nvKSzJuv8c0DQJeL6ZswW63DbUSJgFPP74QJKckIg+1HIYWpK/XjTNlCjaLuJokjK+oY4CQ
      34PPH7rrE2B3Jt05eQN9vPfG6/hlJwT6SSteQ/nKeXTUnuRgxSXsVhM1Yz6PbStD93Sy79dv
      o9udeDwGm595loykuNuHFmMAIdaitgCypHHsN69w6OhZ9Lg01j75HE9uLrvzBi3MnPKnmZ6d
      ijnQzCtvHGV1aQFnKs+w/LHfYkaGhT0/eYkbHYswaiuQ81bw6Lr53Kh8lxOnr7B90xKxMF4Y
      N1HHAGd2vcwH57t59IWv8+S2FRx55e/46HLHnTc4MyjMTUcyQ9ReqiIxIwdTc+H1OsnMTEJR
      48nPy6K9rYX2Zjd5hbkoskJWURG+5hZCgCIN/oh9sYRYi9oCtLa2UrL2WTZsWo1k6rScP8St
      5jZYcGc6tN/VRsW+vQTteWzbugbJaMMwVeSheKmKiqZpmBqoyuCLkqIiaRomoAyND8T5L8Ra
      1AAsWLqUv/1/LxG+dQHF18aZq17++Osz77xB93Lg12+StvRRlpQUYFFktIAT1dKP36fjcCi4
      3H0k5KZgJMm4+ryQk0KwrwczKQkLEDLMwcqIJkCIsagBmLnqS/yJJZ3zl+sxHDP54//5DUru
      mgbhbrxI44BKlq+DqlMdYElg/uK55Oc4OHn0GLOzFa61yex8IhNNmcvew4dIty2nuuI8M1c8
      JTbGFcZV1KtAR376Pa5YV/JHz68HI8DL3/ljip7/HuUlaQB4u25yrb71zgdUJ/NL5yOHvVw9
      d5oer86sxSvJnuIE06Ct7hLX6lpIm15M8ZwZn+j3i6tAQqxFbQG6uzqxTLdhAhIysmTQ2+cG
      BgPgSM+nND3/sx+0OSkpW//J1ySZ7KKFZBctHIWqC8L9ixqAhStX8jc/+hFaxyVwN3K+SeZb
      c6fFom6CMOaGsSIszLVTh6g8Ww3WJFZt286s3LQxuWIjukBCrEW9D2DqGv5AANOExes30lq5
      j06vOEmFh0PUAFzY82/8+xuHcbfX09gRprPhKKcvi2d7CQ+HqGOAG/UNlD//hxQOHKDe1AgF
      dULBULSPCcKEMIwbYUv4v//y11xJk3CFLtHb5eNbfyi2RREeDsMYBOvcqDrOuUt16HIcC1dv
      ZHZ++pgsjBGDYCHWPjcApqHR29mJJttIS0tFkaHnZhXd5DM7f/S3RREBEGLt3l0gU6Pi9R/x
      2tsHCCpOtrzwR6yYFuSf/vGf2f5ff8TsGFZSEMbKPQOgu27y7u6jbPmj7zBTauSlf/ob9ktx
      rH3uP7CyKDWWdRSEMXPPAIQDPvyhBBYsmctULZP0hF8y+5k/5dnNy1DFDDbhIRHlKlA3//q/
      vo3NDNPc7cX3wS9pOLqLbb/zLZYVTYlNDQVhDN0zAJbkXH73P/8ZgdCnBqWSzLS0+LGulyDE
      xBg+J3jkxFUgIdbu2QKYhoGJhISJiYQsVmsJD6F7BuDS/p9yzlvIAss16qyLeG7rkljWSxBi
      4t5jAFXizN5XuWEZwKVU0335wGCBLLPm6d9n/hjcCBOEWLvnbNCi1U/xzKMrUGQJSZKRFWXw
      R1aINAvCNDQCd02SMwydcDhMOBxGC4cZWveOHg7Q1dZGIKyP+h8jCCMVdRDsam+kxxOmp6UR
      PS6NRUsWYP/EloYmnQ2XOX7oEJaCNTy+fjEAjaf3cPD0DeLjrMiqhXU7v04K7ex5/dfIiam4
      ev1s+fILZCXbbx9JDIKFWIs6GzTQ08APvvcSYUsc6GFeTcjlW//7r8hNsQ69o4+LZxqYlpdD
      U1gbfMnU6WztpnjNoyyeNQ2L1YKESc3hCuyz1rH5kXk0nd7NiZOX2LF1udgPSBg3URfEHN37
      DiU7/5Qf/uRn/NMrr7Iye4BDx67c9Y5UNj+3g5yMpNuvmIZO0DRoOneYd3/1Cz48cJyQHqTt
      5gD5hVORJYn0wiKCN5sIAnZVJl6Vxb5AQsxFbQGKFy3k+z/7FxT3dVTfLY5Wu/mDr8z43M9I
      ioXVT/4WpmkS9Lr46O2fU9M0E9ViEh7q+5vhMKbFggz4h7o98WrUPArCqIp6xs0pf4FvvLid
      kLsDr5HA7/23v6J0xudfATJ0nd7eHmRFJT4xiThVwdBVMnOTaa5vwTBNOurriM+dimXU/hRB
      GLlh3gk2MYeu4nx6IUyg7Qo/+9UejHCIsCFjsyXw+O/8HjcOvsr1tgCKGcKePY8ndmxG9nez
      783X8clx+IMWHn3uObE9ujCuogbAMHRME2RFGeFg1UTXNEwkFEW9fenUNHW8A17szgSUT/X5
      RQCEWIvaBbr4/s/4xx/8Av+Iz0sJRbWgquon7htIkoIzMfEzJ78gjIeoAShctIxwy2n2H65C
      N2NRJUGInahdoNNv/AM//MU+NFMmzmYFWeGr//2HbFiQOeqVEV0gIdaiBsDd0URrRx+GaSBJ
      g49JzZo+m9SE0X9YtgiAEGtRu0COBCc3Lx3j3dd/iUtO4NrRD3Fr4nq98HCIeiafePtlKq72
      MzVVpsttonkaqboqtkYUHg5RA9DZ2cnSzTtZNCcf0wjidnkwdNFNER4OUadCrNy4hf/z13/B
      0TgJb/AwhjWd7yyI8EAMQZiAom+NaJp0NdVQW9+CIVkpLFlMTnrimFRGDIKFWIvaAmieTo7u
      28OFmpvItmQClmSy0hdG7zsJwgQQ9Tw+9ut/Zt+ZJhavKmdBYSpvfv+7nKpzx6JugjDmorYA
      cXF2FpQ/xVPPrAfTpL/pIh2dvVCYFO2jgvDAu2cAGs/u450Pz6B7u6huquUHTZUANNzQ+EZh
      TswqKAhj6Z4BsNqdpGdmAplkFdx5PT0zG6seBkb/TrAgxNqwrgJp4SDGXRdnVIsVRRn9YbC4
      CiTEWtQxwOW9L/N3L7+Hahl6q6zw1f/xQzbMH/3JcIIQa1EDcKvpJrM3fIXff3bd0CsSzhSx
      M7TwcIjaj1lUVoa7rZHG+rrBn4Z6BvzaZ95nGjqhUPjuVwh6++nr68cw7ywkMLQgfd3dhMTG
      WMIDIGoLUH3uHO111ez+TefgkkhJ4bH0OWQmf7yW16SnuZZTRw4j565g69qFgElH7WkOVVzE
      ZgFr1gK2bVmB4eli/9u7CFvj8flh09NfIj1RDKaF8RM1ABaLyqJHf5v/9LVNt9cEy8rdH+vj
      9JEqklISaQ8Mbo1ohAOcrjxF6davUpBpZc9Pfkxj50KM2grMnCU8Xr6AhuPvcuLMFZ7YUCo2
      xhLGTdQApGdmUf3aO7ziuTb4gqRQtuNF5uV+fCMslW1ffZZbF/fT3jH4ihbuw+t1kJ2dgqrA
      9Pws2m61YDS5yH8kH1VRyZk1i3N76ghTin0oASIIQqxFbwGSprFyiefOC5IU/UQ1NQzdgjw0
      wlAVFU0LY2qgDm1+JakqkqZhAIokIUkg1skLsRY1AFPnrWDH9IV3vSLhSHZ87mdkxYlq7cfv
      03E4FNz9fThzkzGTJFwuH+SkEHT1YiYlYgFCQ1tHK2Pw8G1B+DxRA3Bx90/48Rsf3f63iczX
      vv0SG4cWxWueLi5X1+NuacHd38uFUxKFCxeSm2Xn1PETzMlRqGmFpx7LRJPm8H7FITLjVnCl
      4hwzlj6JeOCkMJ6i3gnWtRBhbeiSpeHlB3/+F3zpz/+BGamDmxpqAx2cr6q96xMqc5atIN70
      ceXMCbo9BnOWlJGTlgCmwa3rF7l6vYX06cXMK56JcteXvrgTLMRa1AAMdLfS3t0/+A9T5+0f
      fZf8p/6SL2+cO+qVEQEQYi1qF6i24jf8265jt/9tic9k68zsMa2UIMRK1BYgHPQRCN65wysp
      VhwO+5hcshQtgBBr92wBwu5b7HprFwP+T01ZkGRWPvE1inPFghhh4rvnXCBJVrDHO4h3OIl3
      OLFZFToaLrPvvXdo7vHHso6CMGaidoG04ABXTlaw//33aXObLN3wGNu2bSLFMfqPthBdICHW
      7tkFMkIeTh3Yw55338Nvy2HDE8/ze8sWkZxg/8xDMgRhorpnCxBou8w3//SbaEmzWLpoFhZ1
      6JaVJLP80eeZM3X09wYSLYAQa/dsAdTELJ5+8Rv4gp86ISWJOIu4fys8HIb5jLDYEC2AEGti
      gzdhUhMBECY1EQBhUhMBECY1EQBhUhMBECY1EQBhUhMBECa1MQuAaeho4fDtn483h9PDQbo7
      OgiKneGEB0DUFWFfVNO5/Rw8fQOH3YKkWFj71G+TQgfvv/kWpiOJgf4Qm599nsykuOgHE4Qx
      MjYBMHU6W7spKd9O6azB5ZOybFJbUYGlYDVb1pRw8+R7nDh1mSc3LxUbYgnjZky6QKah0zfg
      prP+MhfPXaTH5QEpTEdLP3kFU1FkmYyZM/G3tBICFAlUsTGWMA7GZgwgKSxYs5lZBdPA18Hu
      135Ka28AXeP2gzUkZXBnOBOQJQlZrDEQxsGYdIEkWSErfxZZAMwj3PevtLb3k5As09fnhZwU
      An09mMlJWIDw0M5wqmgChBgbkwDoIT9HP/gNCVmFWEwvV2962FSejt02j72HDjBFXcbVY+co
      LHta7AwnjKsxWQ9gmibujkYaGlrQkckpLGFqRhKYBu0NV6itbyUtfw5zZk3/RL9frAcQYk0s
      iBEmtTG7DyAIY8kwDLzdHRHL1Dg79sTkYR1HBECYmHQdX/XNiEVxmWkiAMLDLWyGOWF8GLEs
      15xPKYXDOo4IgDAhmUj0hhIilqVqw59eIwIgTEhWJJ5U0yOW2ZTh71klAiBMSJIUxu6M3AVS
      bauAsmEdRwRAmJCkoETizyM/Y9pYoWIMbwggAiBMTLos05g+I2KZIyGdyJ2jzxIBECYkEwMP
      zRHLVIb/BCMRAGFCsiDziC0jYllITcQ3zOPEPACmaaCFNRTVgixmf04aIU+AnqstEcucOakk
      TE0d0fE0WeHStPkRy+JTpzFlmMeJaQD0kIczh/bR3OHGMSWPRzatI8EmGqHJQJMMutXI38uy
      nEDkK/r35gf+Rg9HLFtu6PzWMI8T07Ov9fIxmn2JbHtmM9WH3ubkuetsKhv9x60KDx7ZCBPv
      64xYZgk7gMyRHU+WyMyJPN0hMTl+2MeJYQA0WupbKVzyBE5HAnMWL2DPoQbCZXMZ/YctCQ8a
      TdPo7O6KWGadksnIOkBgx+RPcEcsszC8eUAQ0wDoBHyQah883RW7HcnnRwcRgElApYsM8+WI
      ZQ5eBCL35+8lLBmcimuKWJZtcVI87HrFjILdAT5PCADN48FwxIsVYZNESLNzsy/yaSn7M0bc
      AuimRG0o8lUgtIQHMQAquUV5HL9wlvzU5dScrSJr1mrx7T9JJFsS2ZG1MWJZ0DmD0AiPpxJm
      WXB/xLIp2mpg9TCPE0M5xauZ7TrIsQ/34UgromzhzFj+emEc+SwGNRmBiGVTHNqwL1t+TMHO
      VPs3I5bZrQ/kGABki50Fax+jRNeRFWVMHrdqGCZgRiyTJGnEv9PrD/G3Pz0SsWzhrGx2rp83
      0iry0ekGPjrTELHsD55ZNrh+eiTOnUV64/WIReYLX4EFC0daRVqO/RcCrtrPvK5YE5mx+ecj
      Pp6td4CC149GLJM3JULOyMYAEpCsRT59FX34u/3E/CK8JEko6tj92p/tvcCFa+0Ry773HzcT
      N8L7DnY1wJ/N+3HEMkvGOmDkAVjfVc2mK7sjlmmPFgIjC8DpuCxeTS+PWPaiNYPFI6wfgB7q
      Rw/2fbbA/GJrtrVkmZ4dkefpO3NVnCM8Xogw+/TIXaBcYw6l5AzrOA/Eoni7KiMxuDucFvnL
      e9hutrlweQabWmno5+P/ZfNnZiDLI9sLzDTCeNqORSyzxGcSlzLy+xhSextSWxswuCmYgXm7
      0TJnz8aMd4zoeH39fpo6Il8SzM9KJjlh5Puv+rrOoocGgMGd+/Sh+kmyBWf28PrXd5N1gzhv
      5C5Q2GYhbBvZaFA3NGo6z985vgRD20uRbJ/C1KSCYR3ngQjAWJEAmyIR0O8zVWMoTpEI6uY9
      Om0PhomwW8cXraN4PoAwqT3UE3FMeKC//eHBrx/wwH/7wxevo2gBhElNBECY1EQAhEltYo4B
      TJ3Gy6eprWtGlywULi6jMC+DsK+HkwcP0OEOU1T6CAvm5gMQ9vdTc7YSW/5yZuelAiau1utU
      Hq0kKCdSumY9uVnJo/qkGi3Qz5UzJ2nt6MMSn8zi1WtJS7TR13KNyqMnCalJLF27/vamwZ6e
      W1y4cJWSFWtJSbBhhP3UnDtBU2s3WOwsXL2e7NSRXR6NxtfbwtmTZ+n3hUjMmsHyFaVYZYOG
      i8e5eLme+LTprNm0DodFwtA1uhqvcqXFx4Z1K28fwzR1blyopNkNS8vKcNhGd3ZXyNPNxZOn
      6HR5sCdnsbSsjMR4lfbac5w8XYXizGJleTlTkuLAMOhru8GFqy2sXrcGm0XBNA066qs4e+Yi
      IcnB/FXlFOam3T7+xGwBBtq41uqheMVaFs3L4+j+D/AGdc7v30UweQ4btzzC1UO7aHGFCLib
      2f3ar7hUdZEulx8AI9DHh3v2k7dsM8vnZ1Oxdw/e4OgO9Pqaa3GTwrK1G8hL9LP/wAkMfy/7
      3ztAwcqtLC1O58je9/GFDNqvnuC9t3dztaYWf2jw4YH+zgZueW0sXl1Oca6dPbsPjvql0uuX
      q0jJn8fKtY8QajrF+doO+lsuc/xcM6sf20GWfIsDhy8AYS7s38Wxoye4UvvJdbi+zjrOXqyn
      qb6aQHj0B8ut169gJuWysnw9iaFmjp6+ij7QyvsfnGTxxu3MzoQP9x/BMEzqT33Ihx8c4EpN
      PfrQTQFP+zUOfnSBknVPsGnTahLsn7zfMDED4Mxh89aNTMvJwBFvx6KqSFKA5qYBFiyZT0rG
      dEpmpdPQ0IYlPo3NX36ReTOzbn98oLsV3TmNovxssgsXkKL66HJ5RrWKaTNLWfPIUtLTU7FZ
      LVgsFvo7mzBTplOYl8nUooUkMEBPv4+kacU887UXSEu03v58fPZcNm5YRWZmGnFxVizq6E8b
      nP/INkqKC0lOTkJVVFRVpq3+OlNLlpI5JZUFq1bRda2GEAqFK7fw1BPln3ySjxHi1OFjLFy7
      njh1bJa3Tl+4hmVL55OakozVomJRFboba0koWEReVhozFy1B62zFqxlkz13Bzi89icP+ccfG
      pKWmisziUiwhN56wSlrqJzfNmpgBkGUkTBqrKnhvdwWla9cTbw0Q8DuIsw/+SQ5nAj6PB9Ua
      j9MZ94nuTSjoxaImIMsSkqLikBX84cjL674oSZYxgh7O7nuLyqse1q1dQjDgxWpNGJyTpFpw
      IOMPh4lPTMaqyJ/5vBn2c7liN/uPNbBxy5pRf5igLEv4elvY98areBOLKSlIw+cJ4nAOrqiS
      nQnYPB6CKCQmJ33mGW7tNZX4UuZTkDnSiQzDJ8kyur+PI795jeuuBJaXzsLn9RDvGDyRZZud
      +FAIn2HiSErG8olKGgy4B2i9doGq8+c4uvt1Dp+o/kRLOkHHAAY1R97mQqvC5ue+RlqSHUny
      YLH6CYdMsEkEA36s9shTAFTVhqb3YJompqkTMHSsyuj2XfVAPwffeg0jaxE7X1hKnEWhp9uG
      Fu4BTExDI2Aa9/y9hhag8r1f0mOdwZNf2YIzbvRbAF9XA7ve3Etx+ROUzM5DlSWsNpWBQBAA
      M+AnZLNFPklCbo4dPoezoIRTlZW4enu5cqmaVcsXoCqjF9Wwp5N3X/sVmYs3sn3xHKyKjMdm
      I+geXF9shkMEVQVrxEmOEharlZlLylk1Pxd/XwPvvFmJb8U8HEP/2SdkCxDsrafiQiflm9di
      NQP0uwfQDSfZUy3U1tzA199FzfVb5BdMRQv6cPf14g+GCXr76XcP4JySg97fQluXi762RnpC
      KmnJI12W/XlMWq4cpVvNY9miIoIeNwMDPpIyphHqvUl7j5ve1hu4DBtTEh34PW7cLhfhsIa3
      34XH66fvxlmu9zkoW7kAI+BhYMA7ymMAkzMHdpNTuoEZWYl43S78AY2cgum0XL2C2+Oh4cJ5
      EoqKiDN0PO4+3P0eDC2Iu6+PgK5S9tgO5hTNIDsnB1tcHGlpU0b5SZ8mNZX7UHKXUjIzC3+/
      C68vQEb+THrqr9DT76Hteg3GlEwSVRnfgAu3ux8jHGbA1YfPrzGtqIjmy+dxe3wM9HQjOZKw
      3HXWT8i5QO7my3yw/xjIQzG2prJl53Ys3lt8tO8gAd0kdUYpa1cvpKf2FB9VXsLQdZBk7EnZ
      bHjycTz1Jzl2qgZJglkrt1BSlDOKXQyD6yc+4Ex1C8rQGZGQXczmrWV0Vldy/EwtkiQxZ9VW
      imdmUXXwTa41udC1wWni6UVLmZXoouJ07e2nalqT8nls52asn/drRyTM4Tdeod0DH395Fizb
      QunsTKqO7KH+Vj+mEs/67TtIlj0c3PMOfQNhNN1AVa2UlD9O8fTBFVl6oJ+Kj45Qum4bifbR
      7FTonN/3FtdaXLe30MmctYI1q+bRcGo/52vakBUrSzY8Rn6Gg8q9v6SlO4CmGaiqSv6icpaX
      TKPq6AfUtbrBlCjd+AQzsu+sF5iQAfg8hq6h6QYWiyXq3H89HMJAwWKJ7cJMLRzElAYHdA8i
      0zQJh4IoFtvtAD9oTNNEC4eQFAuqEqUjM/T3SKr1M+996AIgCCMxIccAgjBaRACESU0EQJjU
      RACESU0EQJjURACESU0EQHgomIZOOBQe2hdq6D5BKIRufP4MVREA4aFghN38+Nt/wq6PqjCB
      /hvH+fY3/4Jm1+dvujgxJ8MJwqfI1mTWlS/ipTd/yaolRRx67edkLdlJfooNd6ml9zkAAAEJ
      SURBVHsdFR9VIiXlUr5xDVbdy9mKQzR3DogWQHg4SJJM8bqnmWVt5dV/+SEVdTLP7NxA0NXE
      97/7l7T6ZK5/9Covv7qPhmsNHD/XgB7oFAEQHh5q/BSefG47VYf2UbrjRaYlqHQ2XKDZ62TB
      3FksXDSX62dOkZQ/ndXLCjFMmwiA8DCRmFpQQnKChaI5s4HBwbAe9NHcWM+AZSpP7dhAQ/U5
      PjjXwbLVa0QAhIeLNLQhrDQ0uT1j+jyy4/3caO1CC/npbOkiJGkEBnq4cOKImA0qPFx0Xx/H
      jx5l5rIt5KTYAHDdquXEyQuEDJnc2aXMyIjj8IEDJOUWiwAIk5voAgmTmgiAMKn9f7lFcprl
      m1IpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3Rc53mnn3vv9IpBGfTeCTawF7GIEkWq25LVIsmWE8eyLdvr42ziHJ/N
      7iYn62zW2dgbx+uVEzmyZUmRrGpFlkjLlCiKvReAJEgCIAiilwEwfebeu3+wAgTFmRGBO0PO
      c47O0Qd8nHln8P3u194iqKqqkibNTYggCIKotRFp0mhJWgBpbmp0F/5HVVX6hk9qaUuaNNNO
      egZIc1OTFkCam5q0ANLc1KQFcBOjRKPIN/kpuO7aXdJMHSpyJEIwGEK5+DMJk9WMXhQu/iTY
      3cLrr/+ODn8+D379EWrsn/VtZfbu3MFv396MPiOHu7/0pzTmfcbXTFHSAtAUmc59G/inH/2G
      U2OXfioZbMxcvZ6HH7qVunwbcmCEU01HaB4LsDYS62t72fz8i2z1ufnc/WuZUWS7+Btf3wk2
      //rXtI1ZyBXMhOXr+qFSirQANEZVFCKRCIKukEW312MJjNHe3MTed99gICjx37+1DktCrxzm
      zMG9bPVUcMuaVeN+4+07TkeolCe/+xTLqjMwmq7HJ0lN0gJIEsyOGh54+ouURgKcaf6En/3g
      BY5vPcCpL69i1iT9g6Pd7N70Cfuaz+AJytjc5dyy7lbmV2YSHuhk34E9HB8MQ6CfPR9/hOe4
      A3d5JW5pkF2bm/AqIdoP7yfSY2fmklsocYK35zi/e/33HOvxI1pcLLhtHSvnFWPRCeDrZ/fe
      JoYiDhqXzUJu2cbGfQMsuudBcj372N4yQn55JVbPUd7bcoywuYBb77mdescIn7z7B/a1j1E4
      ewV339VItjF5tp5pASQJAiI6gx6TQU9R1RwqCl7g+Il+uodlZumv7L/9+R/ys4/9WG1WDIQZ
      3n+Ijz86yDN/959pDLXz4Tvv0zwQBqWPHb/fwD6dlTlr76bRdJQNm1sY9Cl88HYvTncB9rql
      uPq38Nd/9Wta/WCzW1ADzezeeYjDj32ZZx5sxDLaw+/ffJPjY8UEgx189PJbdEv5lNz6IFLT
      Zp7/xT4U0YTJKCKHQ/j8u9ix9SOccoSQqBLyBdixvw2vZOVP7qsjWSadtACSDVVm+Ewzbb2A
      OZtcpwT+K7sVzF7FYzV51NVVkC0OsOGlF3lr00k+2HGGlffUcN8TDyE++yLb/Lncft/t1Bc5
      ceUXkikV8oVImNc2j3DrvbdRVeikwjbAH57bxCkfzF73IA+sqSPYuoOXX3yXzW9s4LY1M5iH
      iqLI+AY7+ODdLkYMpSxfPpsCG6DIyKpEfu0Cbrt1BhZvJ++/9ltODAk0PH4vc0syGNz9B17a
      dIbeji7GonWYkmTkJYkZabyeg/z8v/4QKyqjPac5MSpRcuscqhymSQVQvfIeijwDtLUcZ3f/
      KAHRjEECz6gPk2smcxbrOfzvr7JNzaCucR4r6jPP/8sChKFDvL9fz8wFC5lXYiZ0Zh9NHf0Y
      nCXceu8aZpcYUUrs9Bw/Qtv7xzjSEWFewbl/HfB5CFqW8eWn72FRXS4mPZwCkMxULljOnetn
      ovS2cezD33JiKJdbH1rHfIuBfukUr3zUTjAUIBIhaUZekpiRRg57aG0KYdDrMVlsLLxnHY8+
      tpZss0Tgis5+9rz6L/z0jWZ0DidWk46oz0NQBdtkL34NIsEQwXAYnc6Cw25EACS9AacrAwOt
      nO0ehvMCsLnLeeRrX2RVpRlRED71dS8njq7TSloASYLZUcvDz9xOqTOD/MJC8rPt6K6yV1T7
      DvHyW4eRCubz1DMPMr/MSc/O/+Aff/Qa4YmdFQVZUVGBq41BvcGAXq9DDvrxB2RwSSjRKL6x
      MSJIuJxWwHO+r5OsbAtikg7oeEme7fhNjsGUx7zVS1jUWEex++qDHyA6PMRARMWe5aa4IBt9
      eISWo6fwBC/vJSKKwFA3e5tOMeQZw+cLEp3k9Yy5edTmZRMeOcvOLYfxhGX6T+5l884OIsZy
      ZlYndhCbCqRngBREV1TBrCwDn2x/mz9/8j30JjNWo0pA5bI7Awczl9RhO76Xj3/5U3a+bKdx
      /WN87enlV76gMZ+7v7CGna2/4ZMXfsTOV/SocgRZsLH8sfuYl22E/mn8gNNIWgCaImLPK2fl
      nXfgM9TivEovncPNwtVrKA5m4zaBYKnhj57+HOY/nCCgirgrG2issdOy6yDR2tyLr123/nG+
      puRw5KwfWTVQXu3GCOjcVaxckUuOXTrXVRCx1d/Kn/+ZgQ0fHKZzaAzRmkX5zEZuWzUHs04E
      SxYLVqyiOJRFjmG8fRmVjdx1dzEVVZnoAMXsYM6qOzDW55Nzfioz5ddz1706smvLsCbRqBMu
      xASnA2JSC1VViQSDRFQBk9mIdJVdpqooROUoqiog6XRIn7Z4V1XkSAiv149gsmMz62+Ytf5k
      5GXVCEmkxanHpM8kGBnS2ozrgiAIGMxmDNfqJ4roxWv1uviiSAYTzsxkuaaaem6qTbBwc33c
      NDGQHhFpbmrSAkhzU5MWQJqbmrQA0tzUpAWQ5qYmLYA0NzVpAaS5qUkLIM1NTVoAaW5q0gJI
      c1OTFkCam5qbyhnuRmJvyzDhiHLtjlPIwjoXOim1n6FpAaQor2w6g8cbc5q4KWFOpTMtgDTa
      kCF6EcSQpjYIpH5iXU0EoKoKYZ+fQEQGUY/VPj4ZrKooyLJ8xdcriBKSKF7MMKCqMr5hD6P+
      KEa7g0yn+aqB3zcaf+N6DtGobWyDX1gITJK1K4WYZgGohDw9HNp7jLazg/jCCoKoJ6u4jHkL
      GyjIMCAAwb42tuxsYTQ4fo2bUV7P0rkVWA1A1EfLrn3sbjqNxydjcmZS19jIvFlFWKTp/VRa
      0G4QkKPayj1fSP1TlOkVgG+IXR9uYeexEQpqZ1BbYCUycJp9O7bRHxB44I7ZZJgERns6OXq4
      BUtpLdnmS/9cPF/UUlXCnNm/i42bm7FUzmXV0gw69uxhy8aPwbCWJfXZ6JI1Ec11ol8SiOi1
      /Yy5pAUQH4IOV2k9D6yoouL8yFaVmbgNr/HqsS68vjoyTOAZ9hJV3Kz6wnpqzFe+TMQzwKFD
      Jwi75/HUQ0uxC1BflYvy85fZd6iVhrJMXDf4NNBKKQHVpakNM0n973h6BWCyUz+3AVG87Lmh
      qoRCEfQ6CUEUQA7j9QaQTS5ckwx+UPGNehgcDFGyugz7+YegpHdSWZ/LoSP9jAYjN7wAPmIF
      HrTdBN+L7poxycnO9ApAFC8+M1RVRY746dy3g00H/FQuK8VpN6CGxhjx+gmpYXa9+xGSZCCr
      IJ/KigIcZgOSpBLwDzM2YqMy75JCBFHE7s7GMtjDQDhCKSZAQLh8WyxA6k/a59CLEnqNjyDP
      1VlP7e9Ts1OgkbOn2L1lN3tb/dQsXsbK5TXYdAJqWMLpzqM87GV4YBA5EqJl315+r8ti+Z23
      sXRGNqoioygSOt34wS3qJERZJnq+7pVOMqMTL2U4EAUdBskx3R93SphfUowvou09gEXvxCCl
      9km6BtbLDLUc5N0Nu+lVMlmw9jaWzSs7V4QBECwZzF21hlnKuROgaMjPwJlOtm/azI4dTdSU
      LkMQJERRQb68tI8KiqygiOLFHDlR2U9UvpRa2azPJix7pu2TTiUq2t4CA4SiI5Di+4DpFYCq
      MNrexLvv72Iso47PrZtPWY4NvXT5acb5BE7nWwaDgeI6G6GBk5za6mE0FCXbaMVk9jE0FIbi
      8y+tKgSHRwjYLDh0qf1HiYXHegcgqO0eQJ1Zpun7Xw+mVQByYIh9Ow/QLefz6IOrKLVdeYwX
      DQbweIPYM5wYdZeOPUeGfahGJ3pRwp6RTY5b5OThdvwzc7BIIIe8nDx2FnNxI1nmVN+aXZvB
      oWEU/xWJ06eVTEVN8R3AtApAJTAySk/PILLewakd288VVriAMYNZjVWYR3vZtmk7EXsBBXnZ
      WPUywz1nOXBomILGmWTbjBikTGqrS2jZeojfbzZSX2yh/0QzTf1GGuaVYEuW8iNTyBtnz+Ib
      82lqw9OqkjSljhJlWkdKJBIgGtXBaCe7dpwd/0tbCYV1pVRl5VBflcfmrUc51SygE1WiEShs
      XM6aFXXYDCIIZioXL+P2wCZ+v20brUaJaESlfNmtLJ2Vj+HGXwFxu76MqCF47Y5TiD7ln/9J
      nBxXVWVCgTAKIBmMF5dD4/uohLwjDHpC2LIzcZo/3S/FrM8mEBmYIounl4zmIOJkyf6nkeEG
      I6qUujfuSZ0cVxAkTJZJb8Iu6yNgsmdQ+Fkrp6eZcj45NEDXoLZ7FoCHVhchXOYmk7QCSPPp
      dA6HUIPaHoXaFANCjDNA06kBmlq1z8z90Oqice20AFKUcERBiWrrj2/l6nXHJvJtx+tI2Xum
      0pyY8PPGuHbq72LSpPkMpGeAFOV463uEfNoegy5f/UVEjDH1NRbOwmBOpIjr9WViyeW0AFIU
      f2CQoH9MWyPU2JdgotGGZM28dsdpJi2AFKWwpJxIQNtTlXFu7degyQjeJKi2WsP4fUtaAClK
      XkExqsbeoEIcAmgxwFnt/feomdBOCyBFGTNkIE9a9nr6cNwAKQjSAkhRTjoaCMnaHuIVCqMx
      O0NXqwHyldEptScR0gJIUZY0/zfUoLYDSlf0fZA+/bb+Ajs6XJzs09Z9G+B7xePbaQGkKNlq
      P6KibXDPWByJsToDJo57tT8GnUhaAMCmfX2MBbRdT1uMEmsX5Mbcf1NmBaGwtsegy0Qx5gG0
      qLefktYzU2pPIqQFAGw+2E/3oLauxVkOQ1wCeM/bz4jGS6AFqhrzAFrYO4ByOi2ANNeJqJJB
      VNY68CH2UyC93QqujCm0JTHSAkhRrD3FRH3aXoQJSuynUMGGeqLuvCm0JjYmOvClBZCi5AwN
      Y9E4JFKIwxWi22hgzKL9VfCsCe20AIDbb1uEN6LtmbpZpwCxD+hlSxYTCWt7E6zXxT588jrC
      5LRrHxDDLeObaQEACIyLEtLEhDjf39rlR/aHp8iaGFkS+wyQU1eOoVB7X4iJITlpAaQotk4/
      ypjGBTKUdIGMG4ItJ39Mz5i2wfJZlgxWlXw95v4mpw1Fp23+o3hmrcPHOhk9rb0rxOxZc9Kb
      4In4wjMYC2m7oTTG6FJwgUieGyWo7eWdKoixH4QaR8GSfBk50gJIUU619xLxarsHWKAUIcYY
      VTsw1EJft/Zpd2Zz27h2WgDAHKeTEo2XE3ZzbKGFFyirKUfWOCuEGEd6drPFis3unEJrEiMt
      ACC0/yDBgWFNbTBk2GHZ7Jj7C4IQV0SW1pRV1FCYGburx3SRFgCwqGwRwUxtfYEM1hs7oe8H
      HQKnksAV6LuLx7fTAgDc9hxkUePlhDm+p7k/MEQ0qO1FWKYa+5Imo9pNXm7aFyjNdeJ46+8I
      erV1hy6887uIMcaEneh/jea+o1Ns0bX5o9n/a1w7LYAUpaq2gWhQ22WbKMXujZqfl0vImgSu
      EBNICwAIhDxENHYr0Al6IPYlwr+2ZePR+Bj0728XsMRYKL727BFye/ZNrUGxMOMb45ppAQAn
      2jbiHdT2ksbsdFLIMzH3D8kQklMnK4OgyEiyxvncJyF1ztHSpJkC0jMAMKtxEbLG9bZEU3wX
      YalGbUUVYp72znMTz83SAgAknQ5BH+NidooQ4/CtT0UkSURKgs+YFsAkvNMqMKRx+WCHTeCp
      Rm1tmEoMvQUYBrRfcQdKxrfTAgBOeKB7UNsNZZa2d1pTTvdxM5GT2teycq1OxwRfQVGRG7NT
      2xMKpyW+P0VJSR6ZQXmKrImNeHyRFJsTOTP5Tq3SAgDq6srwRbRNMXIuJtgbc/+GhgrNc4NK
      UhwBLu4cBCHtCpGU7G7/B3q9/ZrakGlxsarkWzH3v9f/CmJE25OrUe4DYnPiE819iHbtI8LA
      Na6liQBUVSHk9eILywiiHrvTil4UJvSRGRscxOONYnJmkO2yXHFpEUufWMgP92IKdSf8ea4H
      Dik+t4Y93m6i4dhnjKmgXlVizg7d4lHo69V2yQawfkJ7mgWgEhruZu+OI7R2DRGIKAiinsyi
      MhYunUORy3BugxL1cmz7bnYe6WDEL2O0Z1DbuIBF80qwXvjGo16Obt3FruYzjPhlTPYMauct
      YGHjZX1iJMe5FKNeW8cyqym+nDmtA0cIBLQtO1qjyDELYHu3wKFW7fcA2grAO8iOTVvY2+qn
      ZEYDdQVWIv0d7N69i4GgyEN3ziXDGKV9zw42bmnBNWMB6xtcnNmzm50ffIRquIMVs3LREaZt
      93Y2bj1J1owFrG9w0rF7Nzs+2AyGO1g+y40+joBtWSlGVrR1LJOV+OIBimUfEUXbOGYxjuzQ
      ycr0CkDS466axYOryynNOhcEriq1ZAiv82pzD15/BFtoiKamU0TzGnng/kXYBKgqySL8ry9x
      uKmNOVU5OMIDNDW1ouTP4/P3L8QmQGVxFuF/fZmDTW3Mrsom0xL7NLCg6TjRQW0vAiSnDZbM
      1NSGm5HrJAAVJRpisKePgJRBYb5j8qnR6KB2ln18bSlVJegPode7kEQB3+gIgwNhSlaXYTv/
      EBf1Dirq8th/YICRYAjJ62FwMEzpmtKLfSS9g4q6XA4cGmA0GCbTEnuWhYHZMwj5tc2xozfq
      ydbUgpuTBAUQ4fh//Ip/2RnirkcfZVWVyqv/83/yu6YRZEHPjLWP87Unl5BtnLAlFQUuJNJQ
      VYVI0Mvp3Vv54FCI2pUVOO06xvqGGRu1UZF3aQALgoDNnY11qJPBcBiz34N31E51nulSH1HE
      5s7GMtTFQDhK2bk3HJe7RhAEhEmkKYUUJI3rA0hIk9p2VbRfTiMK8dicBAYDgiAhXGZLYgII
      97Dzo2aGI3XkFroYPfwKb27rw1ZRSbl+gD0fvsuWuVXct8A96dejqjJDHSfYtWUPBzvCNNyy
      nOWLK7DqYESRURQJ3eX/UDiXgUBUFGRVRVVlFEVEkoQr+8jn+gDoRCM68ZKTmSBI6CXrFfaY
      mn0IA9pugvVOC/rVV9p2dbR3K9CJVnSTfJ+TMcvYQYaxdYotujZ68VYu3x4mJgDvCF2+MPbi
      CnKdAZp3NhN0urnvkS+yPmMf3/r+h5zt7CO0wM2VZxtRBo7u550NexmSclh650oWzSrGrBMA
      BVGUkESF6OUnZioosowiSUiCgCBIiKKCPGkfEd35TxhVAkSVS2flZiGbsHzlWfSgTkdAb7ri
      59OJUaenZBLbrkbeiVzkUW09SKN3e1Gk2GKp7y7uw2DR9qgZYEge4XIFJCYAUUQvCIQ8gwx0
      nWRPs4eM7BJqa4px+M/FfaqTpc5WZTynDvHO+3uI5M3hC+vmUuQyo7t4ByBgMNowW70MDISg
      lIuvFRjy4LdbcOj0GE02zJbzfc4XPVMVBf+gB7/dikMX3zmopNOh02t7Jxjv+zv6HODROKGv
      Gvv76+w56FWNk/lOQmJ/dVs21fk2Nu/ayD/+l60M9Q9TvuYBynMF+n7fhtdqJis744o7Qtk/
      zP5dh+kXi/mj+5dSbJ34BQrYnFm43TqOH27DOzcXmwRKeIwTzWcxF80j22LEJp3rc+JwG97Z
      bmwSyOExTh7rwlo8n6w4k0wVlhUh56RWVohUo0MH4STI/JLF9XCG02Vzy6P3cPDsL9ndPoit
      aA73P7CAzOBZXvrkFM7sQirK3RNeXCUwOkJP7yCyYKN588c0X/5rYyZzF9WQ68iktqaUYx8f
      5v0P9DSU2uhraaZp0MyshaXYzToMxixqa0o4tuUQGz7QM6PUSu/xJpqHzMxeVIrNrHXpoDQT
      2WuGs0mwD358QjvBeV/EVbWY7/ygBm9QRjJaycq0ISgG7vlPf8kdgoEM15VP4agcRpAsGPyD
      NB0eHP9LWzEVcyrJtZupWHQLd0U+YsOevXQeFlEVkdpVa1g2Ow+9CIgmKhaf67Nx717OHBZQ
      VYm6VWtYOiv3XJ84+Lf2XvqGtL0IczkMfG9l7M5iksEIRq2XFLGP6PzWA5h7D0yhLTFS+MS4
      ZuwCiIYYHvESiY5f20uSBNEgg30XBpAAokIkGsUgXf7yAhlF9Tz67fprvpVkslO/5h4qF48y
      NBLGmpmBw3x5xJaAzuRgxm33UrXkan1iZyQSZSis7TGoEI5PtYMzqlF82oo2V4o9O7QuEsSg
      cQbuyYhdAEOt/OaF92nv81+7rz2XdQ88wKoZmQkbJggCRpuT/E+prRxLnxuVd7q68WlcI+xp
      VUXbs7PPTuwCiAToPnuW9s5z5+XRgA9/VMBitaC7+PBSCft8hDPDLNL4YulGZ97cOYRDGucy
      iiMxlixaiEjaR4RNJI4qZ7P587+tRVFUUEbZ9JP/wxtd+Xz9e1+h4eKDPsCu537CK/31zCh3
      fdqrpfmM6IN60HYFRDy+cB3uhzljumfqbImRRRPasQtA0mG5ELbn66ajO4hOb8XutGG7uASx
      UV2dTe+2gxw4toKKZYXpiJspInw6rHmBDLSvefeZSWx8ChJ6SWCor53Dh09T1JiDTgAlOkrz
      0T4io2P09gwRJjUEcKf7VXxGbW8pTbZsrqxie3UkSUKJYwmiNQu37mLOsVNamwFzvzuumdj4
      tBSycnUtm/7lY379v/6OLeX5OEwC3r4eOrqGMec3UFVdkDIbJIfOg8EweO2OU4ghztvrkqpS
      lJC2/vjxVIixen2YPckQEjmeBB/QRmrWfp6nhuG9D/fQduwYigqIOrJKZ3P/o/ezpCYzCdy1
      0qT5dBITgBxixCcwY/WdVK+4E1EN4wurmMwWrDY72TlODGISXPvdwDzX1sOoV9tkQt9f7STW
      qIstThud2dofjDw5oZ2YAEKdvPqDn/DOySh3/PFX+crnZ2NNP+6nlf5QBE9IWwFM6vB4FbyS
      xLDGDoeTkdiwteSzel0jLmWEQzv309affDd8adLEQoKSNFG+/C6eiUi8+vpWfv6sg7/4zh1k
      XJCTIGIwGjHoUmNaKK2oRQlmaWqDaIgvadT3nC+h6LWtbGkSfkSsQ6imooIcq/ZLoIkkKIBu
      Xv/v/8iLTV3nmj2v8vQnr176dWYZX/rOt3l4Sf5nt3Aa+EHrHLpGtZ3Fsi1mflgbe/9CXT+i
      Ttu0KP44LgLy20JknYzBjWaqmXAXl6AADGSVllKrXCWXjSOfLKu26cbjoSgjA6NB2+gq1w1e
      HyBZSVAALm750pM0Rq6S6UuUsNodiVs1zeQ6bJoLwGaI709hqViOqHFmuICkj9kbwj2zEim/
      eErtiYWJc1CCAtBhdWVgkaOMDvXT0+MhoAiYbRnkF2bjMKXO0x/A3dWLdUzb6dlsNUFDWcz9
      mwURWdD2Jjif2E9R9BYTBln7kLDrJABQ5TF2vPkOm/cfp+VEN2OygCOrgNqZddzx4P3MKTQn
      SSKMa7No6y7UHm2T45KVAWuXxNz9bX2YMbTNZfRNYneH7uwaJNSt/R7APaviOoREqhFObniF
      f/7VZsaiEhaHHbtBxdt7ik86TtE5FOXr33yMumwpZUSQaswbaCEc1PYUSKfGvgnu6RvBc1pb
      ewHcVIxrJyaAkZP89j8OEXFU8eXvfJW75uVjFCE83M6b//xzfrVnL1v3LKJifQ3prd3UYPKN
      IAU1rusUhwCSlcQEMDpKdyhCdn4DjXMKuJAAzuAq587bZ/CrLdsY8XgJQ0oI4KDVjN8eT1Kq
      64/JamGxphZMLY4MB1Ju8nmvJiYAkwmnXqJ3rIOuLj9FRSZEARTZx/GjHaDXYzYbU8IVGuCY
      xcSQLb705Ncbh9UUlwAEURiX9lEbYn9/i8OKLph8hyOJjVF3NXfdUsmBF3bzD3/xfWbPn0up
      U6H9yAEOnxwgq3YZ8+dWxOwolSZ+FsyegyBrfAwahwv3nvbtnDl5egqtiY2n1n91XDvBh7SF
      ufc/xCODKh98cog9H2xgNyBIZgoblvDgYw8wtyR1hn99ST7+DG0j601WbWegqeaYUMUhKUdr
      M3hqQjtBAagI1gLu/eMvs/iuAYaGvYQUAZPFhisnh3y3g3NXJFpP0bFRWehGztT24k4yxnlG
      rgpxxeROCXG8v4CCmIQxlIkJINLLb3/4LO8PZvKlb/0JSxedf3rJw2z62c/425N6nvjG11lZ
      Y00JCfx4v6B9nWCHwN/Ni72/rWkuUlDbmOBggYQa4yrou87fIOXsmVqDYsDPG+PaiQlgqJsD
      7b2IznryCy+buiUXDfWZdG06QduZPpbVlJN8254rqawsIsOtbQE3pyU1PGdvNBIMiAnjkxVE
      0YBOUlEvlBy4ECAhy0Qj0SSc8Canojwfd1jjOsF6Bbhx4ypUtF+xTUZiAshyU5tp5ncd29jw
      Xjl3zC/GplMY7T3BG28exmB3kePOSImnP8Dte/8EcaRTUxsUm5tgybMx9/f7VYSAto+YeAZ0
      s0lgNAnCBhu5HtmhrUWsvW8p2//+Td569qccrK7EbYnQebKNruEQs+97gIU12emg+CnkTKeM
      Mqbtsi1LSYY6NZ+NBE+B9JQsvZtvfQNefm0jzYcPcAqQzNksfuhRvvjgLeTbUmH7ew5TyXwk
      f7mmNigmR1yJ3grm1yGEtJ0BgnHkJdqhLuKYqn2AVOOEdsKXtYJkYc6dDzFn/QP4R70EVQGr
      1YZRL4IgpMTpzwVeKMhkJKLtHsCms/K5OPqbXQ5EjdOvhkQh5mXQF6JO5LC23quTkbg7NDBy
      9jh79rTQPeRD78pl2a2L8O7bwamIi8Ur5+NOnbswza8sknGDeD3Z2NNLW2u71mbw7QnthAUQ
      aP2EH/7wNU50DuALK2RWzqJ84XKktm28sE3EUlbDbbXJlw14MlYqHmRZ28xwoqBtipOblcQE
      4DvFr37yBseHjSx54HEWm1v5+cejgJGZc2vxvbOT06d7Cdfar6gTlowcaJ3JmDdw7Y5TiMVs
      ZE1h7P0//KSJsMbJcefXLEQnxTaEGirrKbIXTLFF8ZPgRdgArb4gZbc8zNNfXorp4GvnBXA+
      WZKqIitqykzrSzdtS46IsFULYu6uqJeuXVKBSGeEcGsS7AHuGt9M7BRLktALAorHf0sAAA/Q
      SURBVFG/l+DlGzHVx+EDrSCJ6PVSyh+RpbnxSWwGyKti3bxifvz2S3y/9zBL87wEBvt448c/
      pOPECbLKFjOjuiBl4gHyli5AN6ptvKpsNaHtLuTmJMFC2Rksf+wR2gZf4qN9B3jjSAQVODIy
      SmZpA59/5H5mF5u0PliJGUEUEeJI9T1VNqSZfhJ+SIuOch755tMsOd3FwJCXkAwGs5XMvAKq
      y93oU2X0A2+d7cI7pG18rcVhY5WmFtycJH4RJgiYnDnUzs6mZsJmzD82jF+w4rSnwhkQ1AVy
      iHq1vbSQdKl0aXLjELcAVDnMYNdpWo534cNIYXU1VUWZGCQBUPF3HePF1zdTsOh+7ln8aVff
      KnIoyGhIwOUYn11GVWSiUfmKUw5BktBJEhdCYVVFZrS/j0FvFHNGJrlZ1oQ23pnFeagObU8o
      BFuquA7eWMQlAFVVOPnxGzz/+m7azw4RRE9mQRmrH32cx1eUMNa+nxf+9d/ZcEri8YWf9joy
      fSeb2LXzGP2ZM/nju2aM+32g+wQbP25ixD/e1yWzeg63Lq7BZgSiYxzZvJ0dTZ14gzIGm5Oa
      eYtYtqAMa5yyzqwsQtK43JCsFxjR1IKbk/gE4DvGr376DoeCZty5ObgkmeGu4/zmfz+LwX8r
      x956jd2nw1QvX8/MysnSjct4ezv4+P0tHOn0Eg2HkCsrJvRRGOntpv1UF9kNc8m7LN7GnmlF
      EkGVg5zc9gkbd5ymcN5S1jY4Ob1rJ9s3fQTGO1g9Jx99ukJNmhiISwC+5v3sH5UoWb6W737z
      fsrNXja9+Auee2s/L/z4NLLkYM6ae/ja05+nxD7ZYiRI+5GTDJHNilUNdLUcoPmKPmFGPD5k
      xc3iO1dQPUnuvcjQIEePn0Ysms+96+dgFaAo14H/uZdpOnqa+TW5ZFpjd27r7B5CGdPWFUG0
      6LDXJ99N6Y1OfAIYGUXFQlllBe5ME5JgZO7cOrI2Hcbrs7Hk7of40iPLrjL4AYyUzl1AwUIz
      LmGUjW0Hr/QCk8N4vUFkiwvXpIknVbxjHoYGI5TeXoL1/INe0tkpr81l34EBRkJhMq2xbypb
      23sJDGrrCmF0GGm8LS2A6SahUyAlGibg8yEBUVUAUaKoaiUPPryQTJ2MzxdAP2mFGB32rPNV
      QsYmL5mpBkN4xnwEwj42/ft/IEhGsvPzqaopJsdlx6iHgH+YsVE71XmXFCKIIjZ3FtahswyG
      I5RjRkBEEC7ZIAgCwqQfOTmWS5PbdrW+2iMKuphtThYHeVEYf9iQgAACnNj1Ib8aOIweCA+f
      ZXAsCsph3npuBAuALZvla29nYWV8ZX/OWWggt7yCOUYfoBINj3F8WwvbtthZtO42Vs7OA1VB
      VUXG3V0J5y+0FBX5/KwiiQYk8VJyRkEQ0YlXzgxJ8ce5im1Xw+HKIGLQ1hlOJ1mQxNiWmoLG
      qdwvMPE7TkAAYXpONtFzcsKPg21s3dh27v8zyyiYuzwhAQhmBw2Ll1GvqKioyJEQI709bN+w
      kd27jtJQmYUgSoiiQjR62fpJBSUqo0giuvPnpFElSFS5FGclCnoiytgV76kmQ/i+qkxq29Xw
      hI4QDmnrvhGWK9Epsd31+ORTjMkdU2zRtQnLS8allIxLANnLHuXZX9x/7Y6iHqcr0YJoAqIk
      ceHBotfrMZaWMWtmEc1bRhkNRXEb7VisY/T1haDkXD9VUfANDOF32HDqk+NpM5WEogOEItqm
      RoznwTGmhhhQtd1nTUZcAtBZXRRNcaW/iN9Lv8eHKycHs/7cGkeVg/R3e8CchUmnw5aRhdtt
      oOVIK2ONudglkEMjnDjWg614AZnmVMhJ/dlomL0ANaLtyZUUYywAwCFxBoekOAIepohHJ7Sn
      1WEz6vPQtP8gHQMRiAQ40+1DVlt45y0PYKBi0TxK6Gfnho/xGt0UFLixG2QGz56luXmMokXz
      yLIZMEhZ1NWWcGzzYd59T2JmmY2eY00c9VhoXFaK3XTjzwAZve9BcPKDhGlDaSDWIXSPZRsr
      7cem1p6YGJ9+b1oFoEZCDHR10X72/LpcZyWTEO1tZwAzzoZZ1Jfns3DBDD7ZfpTm/b0IgoqK
      jupVt3PL4ipsehEEIxWLV3KfuoWNuw+zqUVAEA3MWbuWZbNySZHyxJ+JsUA7SkDbMqkOlJiP
      D2r1Z5BMR6fUnlhIvEZYcJRTp3vAmktpkYnBU514VAtFZfkxux7oM3K57eHHuO0a/YpmLeSR
      mfMIB8+5WYt6w4QjVQHRYKV6xTpK54/hGQ1jcWVgN6VKBMJn59/KZjIWjn3TPBX8mSjFXCNM
      cuSiz9I29cxkxDxiwj3H+PdfvIVQ/wW+/VQhO19+le1U8CffeYSqKcgsLggSRvOnL2UEQcBo
      dZCrbXEXTSjMzyOgODW1QYwjhsGQXaF5KVrgCn+rmAWgREN4+vrxiqdo79LT091LD3Z6e/qw
      TRSAqMPucGBNkSeyVxXwahxfG29NTUPIjxzVOJdoHEHJvzcE6TNpe2oF50KCE0qNaMovo7E0
      kxe3v8V/e8aIEgwRYYgff+8g0sS/nauEx57+KvcvyL0uRk81TYX5DNi1zTLltEqsjKN/WdMW
      IkFt9wBi6ZMgxfZUd7UfQOreO8UWxUDN18Y1Y39EWwu484mHGIi+xp7jA3g5pyRBELiiVFUS
      XKzGQ319OT6NM8OZdQqg/RPyZiOONYpERuU8vvqXNTwZ6uF3//BrdlPOk1//HOUT1+CihNma
      OgvzUf3bjKDthtKqswDrYu4/ho2Qqu09gBrHk666vALBrXEuR7ji6i6uRbogiJhsDkw2E+u/
      /hWWyRJ6PLS39OOLCthcbsrK83FZUyMU8gLWoZOowQFNbTAbMiA/dgF8ZHuCUZ22UWxLBGPM
      KfB71AICSZDHqJTrkR4dA5kFDg69+AqbDrRyumMAnwzWjBzKqqu5+4nHWFRqSZmVkPvMURxj
      2tYHMFjcMDP2/hXZmfgj2qZHF+Mo03ooWMUZn/bu3l+e0E5MAFEf+19/nmffPIzeasOak0uW
      pOL3emk/sI3nhiNI33mKeUWmlEiO1VBbB+HJItimEX1GXJn0LD4/QkjbJVDsuaFhycfbmXf0
      1BRaEyNz/3xcMzEBdB3hpY3HcFWt5S/+x6OUX3YQ4Nn6PI//9U42f9JM7aPzSIX0uGcpJUIC
      rtvXER024vGUWff2e+DRdt+iX1ALutiGkCkQxOBNvhJQiQnAoMcqiQwGh/CMRlBz9OdrhIXo
      7hwESYfBqCdVPHICW6KEBrV9muodEUi+i9IbnsQEkFPOihlu/nnjTv75rz0sWbaAMqdC26E9
      7Njbgq2wjvrakpivybWmuK0jOZLjppl2EhOA5GL1Fx+jpf8Ftjcd5a3nD5/7uWggq6SS+x9+
      hGX1zpRY/6cqFncOmLWtLi/fAOkcE/ZVkFw1PPXdr7O46STdA15CChjNDvKrqpldk5dSqRFT
      EVddteaFsvtEMWVS4F+Nz5Qa0ZJVyPyVBSiygsq5mNx4jsbSJM7PW9vwj2m7qXx4/dKYC6Bk
      zqhF75zaYKpYmOg8ch281c6FMKaZXobCYXxhbWeAeCKpO6JRQhFt7QXI5bpchKXRmsqKcoKB
      eAqrXn+kOPYAWwYGaDuj7WUjXK8ieXKIwb4hfFEBe4YLp92Y0hteUa9HNWibnFbQx/f+ublu
      omFtfWviiQfQ6XTo4/yM00FiAgh18trf/4Tfnohyxx//KV/5/BysKayA3EWN6MY0rhBjMaGt
      N9LUUl9fS1Gu9q4QE0ls2FryWb1uHi5lhIM79tPWn3w3fGnSxEKCz20jJUvW88zX1uHs3cn/
      +9n7nPaMMTpy/r8xH6FIEiSbSpPmGiS4Ce7hzb/5R15s6jrffI1vbHvt0q8zy/jSd77Nw0s+
      rUBGmpsJp2TGqEu+W4OE3aGzysqoU68S9OLIJ8uWWjEBqYa93Yfs17ju7iI15hFUYszEYNXe
      3eM63QO4uOVLTzLvgj+6eq4o9sWci6IO6xWR8slLUFaQZG1965U439/SG0AZ07isUxxB8cr5
      4unJRoIC0GFxOhGGu2lt62Zw2AcWJzPm1BJuP0mfYqWyVtuUHfHwytAgI0PaZlmzOqx8Lp7+
      OS5Uq8bxAHHc+nd7wkT6tbUXIAvT9bkIC3Ud4rmfv8Gug60M+aNkVs7imyVVRD78DT89ZOEb
      f/ktVlRo66wVK9XVVYQ0Xk7ojfGdkefNqUbUOMR2WCfdpL5A4S5+94vX+MO+Xsobb2FdxgAb
      TgBYmT2/irEPD9J2uo8lFWUxx4ymiY+orCBGtR1+cayAkA2DREwa5zIFYLw/UmIC6O1kR8cA
      Fase56++uwrbodfYcKIFAIPBgBqVCYUiyZB1/4Zl96HTRHzaLikaGhqQdLH5gb3UEuVQq/ZL
      oGcnJF9KTACigA6BqF6Y4BEV4GRLJ4giOp2Y0u4RyU5uYR6KxqVdhRugEmdiAsguZl6xnZc+
      fpP/Qy8rXF2EvUNs/c0LtO0+gjWzkuLCnJTxtMs8PkZ0SFtXCMlhgkWx9z/RvoGQT1ubl61+
      HJHYMsPNml1FVukUG5QAiY1RYx6f+8YTtP3NL9n3h7fZHTx3hPeH93uwZuVz++ceZGmtI2XS
      olTNn5VyhbJ1JfUoQY2XFDHWBwOw2cy4xGTYEY7fhyQeEZY1k699/xvs33+Mrn4vYQV0Rht5
      FXUsW1iBKb3+mVJeaRHweLV9xMxZA7pkGNOfgc+0SrG5S1l2ezHRaBRFBVHSodfrSLVQ0R8d
      6mTQo+0xqNOu56v11TH3X7p0FgGNJ4AYM6IAIKoKoqp9asSJJCwAeayXze++y3sf7Kbl7Ciy
      KmDLLmXp+jXcv245pW5zymyCT3uDdI9oG1ySpcZ3E5yRYccsa/sNC0Lsx5q3Bt/D6D07hdbE
      Ri9PcHlMWIIBMR52v/4SP3l5N1FJR0ZuIRnGKIM9HXzw6+c50+Pjma/cQ4UrNUIlq6qKcOVq
      e2jrtKTK4yIxmozgi70M8pRRzfUIiRzu4MOdpxCzinjw8cdZOdONSVLw9RznN8+9xs59O9nX
      spiyxXkpMQs8GPolSqhPUxsEyQX8Wez9VRnU1LlpGe5pZqjvsNZmUF39xLh2YgIwWXCZ9WSa
      alm8ci6VjvM/Ly7iiZ5DbHvuDCMjXqIQc9YALfknXYhevbZ7gExdiL+Ko3/WkSc0L5AhFP8S
      pNicHj/wL+PgWM0UW3RtVkxoJyYAWyFrVtWy671hhoeD4LiUA05RVQxWM1lZzpS5B6iTR8mL
      aDuYbIZUmCtvPGIfo73N/N/nf0d777nwRzUwxFDnKP/2g//B25eViQwMdJJbvIaZtZnXWP6o
      F31JJvMqVCc6mgjCFfcKsfSJhZroKEHZk8C/vH4YovHNlbVV1agRbX1rpLjS4STnrdD/B3NH
      D8i2A6p0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Social Media Sentiment Insights Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
