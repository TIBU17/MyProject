<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-weight' value='bold' />
      <format attr='font-size' value='15' />
      <format attr='color' value='#59a14f' />
    </style-rule>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='2) Stock Prices Data Set' inline='true' name='federated.18v0l8x18ubk671h4zlnn0m44ooe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2) Stock Prices Data Set' name='textscan.17fej940v49noa13d7ty71yqp60k'>
            <connection class='textscan' directory='C:/Users/TIBU/Downloads/CodvedaProject' filename='2) Stock Prices Data Set.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.17fej940v49noa13d7ty71yqp60k' name='2) Stock Prices Data Set.csv' table='[2) Stock Prices Data Set#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_ZA' separator=','>
            <column datatype='string' name='symbol' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='real' name='open' ordinal='2' />
            <column datatype='real' name='high' ordinal='3' />
            <column datatype='real' name='low' ordinal='4' />
            <column datatype='real' name='close' ordinal='5' />
            <column datatype='integer' name='volume' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_ZA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>symbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[symbol]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>symbol</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[2) Stock Prices Data Set.csv]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([close]), -2, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg close' datatype='real' name='[Calculation_726768446812143616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([close])' />
      </column>
      <column caption='Max Close' datatype='real' name='[Calculation_726768446815633409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([close])' />
      </column>
      <column caption='Min Close' datatype='real' name='[Calculation_726768446815870978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([close])' />
      </column>
      <column caption='Total Volume' datatype='integer' name='[Calculation_726768446860201987]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([volume])' />
      </column>
      <column caption='Days Recorded' datatype='integer' name='[Calculation_726768446860644356]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([date])' />
      </column>
      <column caption='2) Stock Prices Data Set.csv' datatype='table' name='[__tableau_internal_object_id__].[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]' role='measure' type='quantitative' />
      <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
      <column caption='Low' datatype='real' name='[low]' role='measure' type='quantitative' />
      <column caption='Open' datatype='real' name='[open]' role='measure' type='quantitative' />
      <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
      <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[symbol]' derivation='None' name='[none:symbol:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/TIBU/AppData/Local/Temp/TableauTemp/#TableauTemp_0ez0e4p1oauadi1gw8w8g0bb5n5r.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/24/2025 03:58:08 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>symbol</remote-name>
              <remote-type>129</remote-type>
              <local-name>[symbol]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>symbol</remote-alias>
              <ordinal>0</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>786</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3514</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>open</remote-name>
              <remote-type>5</remote-type>
              <local-name>[open]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>open</remote-alias>
              <ordinal>2</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73236</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>high</remote-name>
              <remote-type>5</remote-type>
              <local-name>[high]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>high</remote-alias>
              <ordinal>3</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86157</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>low</remote-name>
              <remote-type>5</remote-type>
              <local-name>[low]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>low</remote-alias>
              <ordinal>4</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>89856</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>close</remote-name>
              <remote-type>5</remote-type>
              <local-name>[close]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>close</remote-alias>
              <ordinal>5</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76652</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volume</remote-name>
              <remote-type>20</remote-type>
              <local-name>[volume]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volume</remote-alias>
              <ordinal>6</ordinal>
              <family>2) Stock Prices Data Set.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497472</approx-count>
              <contains-null>true</contains-null>
              <object-id>[2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:symbol:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ADI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ALLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BHF&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CCL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CNC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CXO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ESS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FITB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GPC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HOLX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;INTU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KIM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LNT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NAVI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NWS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QCOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SCG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SWK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TSN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VFC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WRK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AIV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ANTM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BAC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CSRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DISH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EMN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HCN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IBM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JEC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MRO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NOV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PCLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TJX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UNM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WDC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;XYL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABBV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;APC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BDX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CBG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CME&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CTSH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DPS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EQR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HIG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ILMN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JWN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LLL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MTB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NTRS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PFE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PWR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RSG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRIP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WLTW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ZTS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ADSK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AME&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AVGO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BLK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DXC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVHC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HPQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KMX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LUV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PLD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SIG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SYMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VNO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WYNN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALXN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARNC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BHGE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CDNS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CNP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DVA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ETFC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KLAC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NBL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NWSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PHM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;QRVO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SCHW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SWKS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TSS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIAB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ABC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALGN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;APD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CBOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CMG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CTXS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DRE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EQT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FFIV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HII&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;INCY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;K&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LLY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MDLZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NUE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PFG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RTN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TROW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UTX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AGN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ANDV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BXP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DISCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EIX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FTV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HBI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HSY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JBHT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MPC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NLSN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PCAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PPL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SNPS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TGT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ULTA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XRAY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AIZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BAX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CLX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CSX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DLR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EMR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FBHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HCP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ICE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JNJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NRG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PDCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SPGI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TMK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WEC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AET&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AYI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BSX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHRW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COTY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DHR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ED&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EXPE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HAS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ITW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KSS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PAYX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PNW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RHT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TDG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UDR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VTR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XLNX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ABT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;APH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CBS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CVS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DRI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GOOG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HLT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;INFO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NVDA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PXD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SBAC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;V&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WMB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AEE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AMG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AVY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BLL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CFG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FMC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HRB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IRM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LYB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MMM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NEM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORCL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;REGN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SYY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VRSK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;XEC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AEP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AMGN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AWK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BMY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DGX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EBAY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EXC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FOX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GWW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ISRG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KORS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MNST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NFLX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ORLY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PNC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UAA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VRSN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XEL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AFL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AMZN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHTR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CPB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EFX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EXR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FTI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HBAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IVZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KSU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NKE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PBCT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RJF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SNI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TEL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UHS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;XOM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AIG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ANSS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CINF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CSCO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DISCK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAST&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HCA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HUM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JCI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NOC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PCG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRGO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RMD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TIF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UNH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WBA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;XRX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AMAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ATVI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BIIB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CELG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DVN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ETN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FLIR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KMB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LRCX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MKC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCLH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SEE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SYF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TWX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VLO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ADBE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;APTV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BF.B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CCI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CMS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CVX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DTE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ESRX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FISV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GOOGL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HOG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;INTC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KHC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LNC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MET&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MYL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NWL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PGR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PYPL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SBUX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TSCO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WMT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AAP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AJG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AOS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BBT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CTAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DLTR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EOG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FCX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GILD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDXX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNPR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCHP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MSFT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NSC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PSX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SRCL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TMO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UPS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WFC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ZBH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AES&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AMP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AXP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BRK.B&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ECL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EXPD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FOXA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NFX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OXY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PNR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TAP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VRTX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ADS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AMD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AVB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CERN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DWDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ETR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FLR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRMN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HPE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IQV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KMI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LUK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MLM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NDAQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OKE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PKI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SHW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SYK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TXN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VMC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WYN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AAPL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AKAM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;APA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CMCSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DOV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EQIX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FDX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HES&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IFF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JPM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LKQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MCK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MSI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NTAP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PEP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PVH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SRE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TPR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;URI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ZION&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;South Africa&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='2) Stock Prices Data Set.csv' id='2) Stock Prices Data Set.csv_9258746FD77D4CC7A8FFBEB82DE512FE'>
            <properties context=''>
              <relation connection='textscan.17fej940v49noa13d7ty71yqp60k' name='2) Stock Prices Data Set.csv' table='[2) Stock Prices Data Set#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_ZA' separator=','>
                  <column datatype='string' name='symbol' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='real' name='open' ordinal='2' />
                  <column datatype='real' name='high' ordinal='3' />
                  <column datatype='real' name='low' ordinal='4' />
                  <column datatype='real' name='close' ordinal='5' />
                  <column datatype='integer' name='volume' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#59a14f' fontname='Benton Sans Book'>Stock Price Trends Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2) Stock Prices Data Set' name='federated.18v0l8x18ubk671h4zlnn0m44ooe' />
          </datasources>
          <datasource-dependencies datasource='federated.18v0l8x18ubk671h4zlnn0m44ooe'>
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[symbol]' derivation='None' name='[none:symbol:nk]' pivot='key' type='nominal' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
            <column-instance column='[close]' derivation='Sum' name='[win:sum:close:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AAL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AAP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AAPL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ABBV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ABC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ABT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ACN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADBE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ADSK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AEE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AEP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AES&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AET&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AFL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AGN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AIG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AIV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AIZ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AJG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AKAM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALGN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALLE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ALXN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMAT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AME&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMGN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AMZN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ANDV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ANSS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ANTM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AON&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AOS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;APA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;APC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;APD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;APH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;APTV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ARE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ARNC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ATVI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AVB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AVGO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AVY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AWK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AXP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AYI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;AZO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BAC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BAX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BBT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BBY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BDX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BEN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BF.B&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BHF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BHGE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BIIB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BLK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BLL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BMY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BRK.B&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BSX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BWA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;BXP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CAG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CAH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CAT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CBG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CBOE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CBS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CCI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CCL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CDNS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CELG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CERN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CFG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CHD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CHK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CHRW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CHTR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CINF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CLX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CMA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CMCSA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CME&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CMG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CMI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CMS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CNC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CNP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COST&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;COTY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CPB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CRM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CSCO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CSRA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CSX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CTAS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CTL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CTSH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CTXS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CVS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CVX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;CXO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;D&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DAL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DFS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DGX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DHI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DHR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DIS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DISCA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DISCK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DISH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DLR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DLTR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DOV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DPS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DRE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DRI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DTE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DUK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DVA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DVN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DWDP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;DXC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EBAY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ECL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ED&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EFX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EIX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EMN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EMR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EOG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EQIX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EQR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EQT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ES&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ESRX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ESS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ETFC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ETN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ETR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EVHC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EXC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EXPD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EXPE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;EXR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;F&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FAST&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FBHS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FCX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FDX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FFIV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FIS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FISV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FITB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FLIR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FLR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FLS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FMC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FOX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FOXA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FRT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FTI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;FTV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GGP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GILD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GIS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GLW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GOOG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GOOGL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GPC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GPN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GPS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GRMN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;GWW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HAL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HAS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HBAN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HBI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HCA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HCN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HCP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HES&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HIG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HII&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HLT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HOG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HOLX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HON&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HPE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HPQ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HRB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HRL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HRS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HSIC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HST&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HSY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;HUM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IBM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ICE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IDXX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IFF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ILMN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;INCY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;INFO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;INTC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;INTU&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IPG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IQV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IRM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ISRG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ITW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;IVZ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JBHT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JCI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JEC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JNJ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JNPR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JPM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;JWN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;K&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KEY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KHC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KIM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KLAC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KMB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KMI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KMX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KORS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KSS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;KSU&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;L&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LEG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LEN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LKQ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LLL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LLY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LMT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LNC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LNT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LOW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LRCX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LUK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LUV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;LYB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;M&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MAA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MAC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MAR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MAS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MAT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MCD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MCHP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MCK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MCO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MDLZ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MDT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MET&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MGM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MHK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MKC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MLM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MMC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MMM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MNST&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MON&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MOS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MPC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MRK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MRO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MSFT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MSI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MTB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MTD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MU&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;MYL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NAVI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NBL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NCLH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NDAQ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NEE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NEM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NFLX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NFX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NKE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NLSN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NOC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NOV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NRG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NSC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NTAP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NTRS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NUE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NVDA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NWL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NWS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;NWSA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;O&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;OKE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;OMC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ORCL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ORLY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;OXY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PAYX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PBCT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PCAR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PCG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PCLN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PDCO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PEG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PEP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PFE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PFG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PGR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PHM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PKG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PKI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PLD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PNC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PNR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PNW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PPG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PPL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PRGO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PRU&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PSA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PSX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PVH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PWR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PXD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;PYPL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;QCOM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;QRVO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RCL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;REG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;REGN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RHI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RHT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RJF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RMD&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ROK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ROP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ROST&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RRC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RSG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;RTN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SBAC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SBUX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SCG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SCHW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SEE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SHW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SIG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SJM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SLB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SLG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SNA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SNI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SNPS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SPG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SPGI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SRCL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SRE&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;STI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;STT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;STX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;STZ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SWK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SWKS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SYF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SYK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SYMC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;SYY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;T&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TAP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TDG&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TEL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TGT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TIF&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TJX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TMK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TMO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TPR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TRIP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TROW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TRV&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TSCO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TSN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TSS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TWX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TXN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;TXT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UAA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UAL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UDR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UHS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ULTA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UNH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UNM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UNP&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UPS&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;URI&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;USB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;UTX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;V&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VAR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VFC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VIAB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VLO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VMC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VNO&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VRSK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VRSN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VRTX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VTR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;VZ&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WAT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WBA&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WDC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WEC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WFC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WHR&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WLTW&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WMB&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WMT&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WRK&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WU&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WYN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;WYNN&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XEC&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XEL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XLNX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XOM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XRAY&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XRX&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;XYL&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;YUM&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ZBH&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ZION&quot;' />
              <groupfilter function='member' level='[none:symbol:nk]' member='&quot;ZTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[win:sum:close:qk]' included-values='non-null' />
          <slices>
            <column>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</column>
            <column>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[win:sum:close:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#f5eddc' />
            <format attr='background-color' scope='cols' value='#f5eddc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[win:sum:close:qk]</rows>
        <cols>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{AA6B6A96-AD3E-40A4-B1C9-555548ACF434}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#59a14f' fontname='Benton Sans Book'>Trading Volume by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2) Stock Prices Data Set' name='federated.18v0l8x18ubk671h4zlnn0m44ooe' />
          </datasources>
          <datasource-dependencies datasource='federated.18v0l8x18ubk671h4zlnn0m44ooe'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[sum:volume:qk]</rows>
        <cols>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{651B68FE-01D1-4718-A013-F0DC5B6A8070}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Benton Sans Book' italic='true'>Distribution of Stock Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2) Stock Prices Data Set' name='federated.18v0l8x18ubk671h4zlnn0m44ooe' />
          </datasources>
          <datasource-dependencies datasource='federated.18v0l8x18ubk671h4zlnn0m44ooe'>
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column-instance column='[symbol]' derivation='None' name='[none:symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[close]' derivation='Sum' name='[sum:close:qk]' pivot='key' type='quantitative' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' />
            </encodings>
            <reference-line axis-column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[sum:close:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[sum:close:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[sum:close:qk]</rows>
        <cols>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</cols>
      </table>
      <simple-id uuid='{6ADB8C0F-7BC8-4E3E-A5ED-3DF63267AD98}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Benton Sans Book'>KPI Cards</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2) Stock Prices Data Set' name='federated.18v0l8x18ubk671h4zlnn0m44ooe' />
          </datasources>
          <datasource-dependencies datasource='federated.18v0l8x18ubk671h4zlnn0m44ooe'>
            <column caption='Avg close' datatype='real' name='[Calculation_726768446812143616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([close])' />
            </column>
            <column caption='Max Close' datatype='real' name='[Calculation_726768446815633409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([close])' />
            </column>
            <column caption='Min Close' datatype='real' name='[Calculation_726768446815870978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([close])' />
            </column>
            <column caption='Total Volume' datatype='integer' name='[Calculation_726768446860201987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([volume])' />
            </column>
            <column caption='Days Recorded' datatype='integer' name='[Calculation_726768446860644356]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([date])' />
            </column>
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_726768446812143616]' derivation='User' name='[usr:Calculation_726768446812143616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_726768446815633409]' derivation='User' name='[usr:Calculation_726768446815633409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_726768446815870978]' derivation='User' name='[usr:Calculation_726768446815870978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_726768446860201987]' derivation='User' name='[usr:Calculation_726768446860201987:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_726768446860644356]' derivation='User' name='[usr:Calculation_726768446860644356:qk]' pivot='key' type='quantitative' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446812143616:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446812143616:qk]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d72cf5' />
            <format attr='background-color' data-class='subtotal' value='#d72cf5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#b5ed79' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446812143616:qk]' />
              <text column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446815633409:qk]' />
              <text column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446815870978:qk]' />
              <text column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446860201987:qk]' />
              <text column='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446860644356:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446812143616:qk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446815633409:qk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446815870978:qk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446860201987:qk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.18v0l8x18ubk671h4zlnn0m44ooe].[usr:Calculation_726768446860644356:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='525' />
                <format attr='maxwidth' value='525' />
                <format attr='minheight' value='100' />
                <format attr='maxheight' value='100' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1CE4A37C-8A0D-44A9-9E11-E9CF3F84E28C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Stock Price Trends and Market Performance'>
      <style />
      <size maxheight='652' maxwidth='1255' minheight='552' minwidth='1155' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='7' param='horz' type-v2='layout-flow' w='98614' x='693' y='1449'>
            <zone h='97102' id='5' type-v2='layout-basic' w='95843' x='693' y='1449'>
              <zone h='48551' id='3' name='Sheet 1' w='47920' x='693' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='9' name='Sheet 2' w='47923' x='48613' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='10' name='Sheet 3' w='47920' x='693' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='12' name='Sheet 4' w='47923' x='48613' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='32' h='97102' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='2771' x='96536' y='1449'>
              <zone h='85870' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type-v2='color' w='2771' x='96536' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11232' id='11' name='Sheet 3' param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type-v2='highlighter' w='2771' x='96536' y='87319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='15' param='vert' type-v2='layout-flow' w='98614' x='693' y='1449'>
                <zone fixed-size='280' h='48551' id='3' is-fixed='true' name='Sheet 1' w='47920' x='693' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='85870' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type-v2='color' w='2771' x='96536' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='9' is-fixed='true' name='Sheet 2' w='47923' x='48613' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11232' id='11' name='Sheet 3' param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type-v2='highlighter' w='2771' x='96536' y='87319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='10' is-fixed='true' name='Sheet 3' w='47920' x='693' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='12' is-fixed='true' name='Sheet 4' w='47923' x='48613' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E125F05F-291C-4F1F-8813-DC82FC3389A2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</field>
            <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14984C9F-88E7-493F-96A2-01611F6C1DB4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B19AE54-93E1-436D-826C-417CFC46F7B8}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[:Measure Names]</field>
            <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD2668E6-E08B-414A-89D4-41D72623D883}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1982BF27-DBFA-4D05-8E80-F93C4D37EFBF}' />
    </window>
    <window class='dashboard' maximized='true' name='Stock Price Trends and Market Performance'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.18v0l8x18ubk671h4zlnn0m44ooe].[none:symbol:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;VLO&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 4' />
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{E2AB20AC-2C6C-4310-8FE3-EAFAB81EA2C2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      BQ7FYjgxTI4zZ/puT1HejfxZ0zoAomO7+OWBTdRH6mkK+KaL4lmWhSIBEN8wx9cAo+ztbiGW
      SZE20kwmuulLqgRdTnIDdXgzbRwcGyFjZmgd3IPiqKDIm8PCSA1HB3cxnEqQTo/wVX8bCyJ1
      aMpU8y0rQ8pIkTJSRFNR0lYaC9nZxfnNeQ/Q2vUyzx6cIOB0M5GcoLbsQa7N8eJUFrCxrIHn
      d/0dO3w5dCcVHlj6JCFNJVR8K9f1/oL/vePnBJU4cUcVP6lYOn2b8+iJl/gP3a8CoGlh1tXc
      T73/yhqDUlyZ5jgAOdy34mdsTMVImQa65sbv9KOrKuBiSeUDVBetp3cyTkGgmByHe+pnaoC7
      l/+MtbEeYqaLQn8+3uxDsvrKR/nvZQ9Nr0FVdNy62xYlPsUfbs57AF1zE/S4zzpXVR3keIrJ
      8Xx7nq65KcypPuv0gHb25QlxPvIukLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmA
      sDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1
      CYCwNQmAsLXLVineNDOkjAyqquNQ9amBmy2TiXgPx2NRykM1BB2OUz+w0vSMtTNuuanMKcOd
      HfrNMFOkDSP7JRWH7kSTQXDFBbo8AbCS7Gx9lje7WigruY+nGtahW0m+PvYqL584Qpk/QNeh
      FHcv+lOui+SDOc4ru3/JwaSHoBpnVCniyWt+TLFT50jHS/zm2CHCTjdYBrGMwtrah7itrDFb
      T0CIc7ssARga3cOX42lWRErpNKeO3hPRI2zubmVj01OsCeew++jzbD22lYbQ/Uz2fczuZB5P
      LnuEAi3KW/t/ywedB/lh9RJMM0Ve7nqerF8JmHT2b+HNE++ztKCRctfl2Doxn8z5NYBlRvms
      fTuVJRuocJ8q4jUUbSOm1bA8txiX7mNR4QqM1DH6JmO0DLVRmbeKUm8OXncRqwtrODzUgpEd
      +1/XfUTcYUKuIAGHF5fmRpejv7gAc9wDWHT3b6WNCp4orKZt4uPpOfHEMGl3ETnZSPqdQSxM
      oslxBpNj5ITyszu1Sq43j+HEqRJJA8M7efHgCTKZMQZTKhvq76foZIkk51Q3oJxWLUaIk+a0
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 4' width='192'>
      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
      a2YsW5icj82UxoWBi7zRuE91XwiGxg1um64z+gLQMtrB+YF6siwZs7qZZUXm7ab9eIJetpds
      mdZ8YDo8QS8H2j4B4ItFmyO2F53gOEZRFN5t/pAR3yhfXfLQddviGeZ0HlywnZ11u3mv5SPe
      a/ko5v0d7jiOJ+jlnqLNs3r61w5c4mzfee7IW0tZ2sLrlr+WS8ONtI52UJRSwJIJV+ipCAHE
      MY32Zk71VLEqa+ms3fg25K4mPzGHvQ1v0+boBMa9Re8quINOVw8H2g5Pa+ve7uyiqr+WVGPK
      rJ7+YwE3f27+gFRjMvcW3xWz75FP9vNB6yFChNhcsCHqxzbxISyO+eX533Gy59x1y0X7IHYt
      siLz06rfcGn4Ct9d+a0w6xEYf/r/9uIfONRxnHuLt/DIoi9fd7/n+s7zfM2uWS1jFe1jWk1/
      Hc/X7CIvMZt/XPNcVP8h8QaIY0pTi1SbxanIijz+kSrgpSx9IWnm1Os2jzqdPTTZW0gzWclP
      ilylpdfdT01/HanGZDbl3zar47OaUlmfsypqXoezmw5nNwVJuRP/8sLyg6EghzpPICsydxbc
      Pq35lhBAHLN13qao6ZMhBd2uXu4v3Rb25Hf4nWoczSRjATevXXqDsYCbu+dtUu0yBr8AAAD2
      SURBVJd6msonnaew+xxsLthAtmXmpZ8muda1eipvNb1Hh7ObVVnLooZRNNlbuTR0hWxLJpWZ
      FdPuQwhAEBOvXHydxpEWytIXsihtPh3Obk71VOH0u1hoLeHueV+I2KbPPcCJ7rMk6C3cWXB7
      zG35WJEVmQ9aD+GT/WzKv21a42JZkYUABLGRk5BFdX8tx7vPcLz7DDBuU7gxfx2PLXogqlv0
      ie6z2H2jbMy7jcJrmipzQctoB5eGG6871OqXA6ITLIidYEim3z1Ih7MLi95CaWrRf2gBu5uJ
      EIAgrhFfggVxjRCAIK4RAhDENUIAgrhGCEAQ1/x/y4tUHFa/Ni4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stock Price Trends and Market Performance' width='192'>
      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
      RKOVFAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
